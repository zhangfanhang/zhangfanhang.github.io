(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{469:function(t,s,a){"use strict";a.r(s);var n=a(14),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#变量"}},[t._v("#")]),t._v(" 变量")]),t._v(" "),a("h3",{attrs:{id:"变量的默认值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#变量的默认值"}},[t._v("#")]),t._v(" 变量的默认值")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("一个变量只定义，但没有赋初值，默认值是 undefined")])]),t._v(" "),a("li",[a("p",[t._v("一个变量只有被var定义，并赋初值之后，才算正式初始化完成")])])]),t._v(" "),a("h3",{attrs:{id:"变量的常见错误"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#变量的常见错误"}},[t._v("#")]),t._v(" 变量的常见错误")]),t._v(" "),a("ul",[a("li",[t._v("不用var定义，而直接将值赋予它，虽不引发报错，但会"),a("strong",[t._v("产生作用域问题。")]),t._v("\n例如：")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("  b "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("fun")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    a"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" b "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fun")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 10 , 不加var相当于声明了一个全局变量")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 5")]),t._v("\n")])])]),a("p",[t._v("在函数外，用var声明的变量为全局变量，不用var声明的变量也为全局变量。全局变量其实是在window对象中添加属性并赋值。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用var声明")]),t._v("\nb "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("456")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 不使用var声明")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 123")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 456")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 123")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 456")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n")])])]),a("p",[t._v("在函数中，用var声明的变量为局部变量，不用var声明的变量为全局变量")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用var声明")]),t._v("\n b "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("456")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 不使用var声明")]),t._v("\n console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 123")]),t._v("\n console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 456")]),t._v("\n console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// undefined")]),t._v("\n console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 456")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 456")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n")])])]),a("p",[t._v("除了作用域的问题以外，")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用var声明")]),t._v("\nb "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("456")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 不使用var声明")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 123")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 456")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("delete")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("delete")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 123")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// undefined")]),t._v("\n")])])]),a("p",[t._v("delete 用来删除对象的属性，如果是不可配置的属性返回false，其他情况返回true,可以看到，变量 a b 都是全局变量，同为window对象的其中一个属性，a 不可以删除，b 可以删除.")]),t._v(" "),a("p",[t._v("即："),a("strong",[t._v("同为全局变量，同为window对象的其中一个属性，用var声明的变量不可以删除，不用var声明的变量可以删除！")])]),t._v(" "),a("p",[t._v("对象属性是否可删除, 其实是可以配置的")]),t._v(" "),a("p",[t._v("Object.getOwnPropertyDescriptor(); 方法返回某个对象属性的描述对象")]),t._v(" "),a("p",[t._v("Object.defineProperty(); 方法会直接在某个对象上定义一个新属性，或者修改一个已经存在的属性， 并返回这个对象")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用var声明")]),t._v("\nb "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("456")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 不使用var声明")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getOwnPropertyDescriptor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// {value: 123, writable: true, enumerable: true, configurable: false}")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getOwnPropertyDescriptor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'b'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// {value: 456, writable: true, enumerable: true, configurable: true}")]),t._v("\n")])])]),a("p",[t._v("我们可以看到window对象的属性 a 和 b 的描述对象包含以下信息:")]),t._v(" "),a("ul",[a("li",[t._v("value 属性的值")]),t._v(" "),a("li",[t._v("writable 属性是否可被修改，布尔值")]),t._v(" "),a("li",[t._v("enumerable 属性是否可被枚举(遍历)，布尔值")]),t._v(" "),a("li",[t._v("configurable 属性是否可以被删除，布尔值")]),t._v(" "),a("li",[t._v("属性 a 和 b 的描述对象区别在于是否可删除, 这个特性属性 a 为 configurable: false 不可删除,属性 b 为 configurable: true 可删除")])]),t._v(" "),a("p",[t._v("即："),a("strong",[t._v("对象的属性是否可删除，取决于描述对象的属性configurable，用var声明的变量默认不可删除，不用var声明的变量默认可删除。")])]),t._v(" "),a("p",[t._v("经过下面代码在浏览器中测试，"),a("strong",[t._v("var定义的全局变量，无法修改它的configurable属性，即它无法被修改为可删除。"),a("strong",[t._v("而不使用var声明的全局变量")]),t._v("可以修改")]),t._v("它的configurable属性")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用var声明")]),t._v("\n b "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("456")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 不使用var声明")]),t._v("\n Object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("defineProperty")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'b'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("configurable"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 默认为true")]),t._v("\n console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("delete")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// fasle")]),t._v("\n Object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("defineProperty")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("configurable"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//Uncaught TypeError: Cannot redefine property: a at Function.defineProperty (<anonymous>)")]),t._v("\n console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("delete")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 报错")]),t._v("\n\n")])])]),a("ul",[a("li",[t._v("尝试使用一个既没有被var定义过，也没有赋过值的字符就会产生引用错误。")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// undefined 变量必须先赋值再使用")]),t._v("\n")])])]),a("h3",{attrs:{id:"变量的合法命名"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#变量的合法命名"}},[t._v("#")]),t._v(" 变量的合法命名")]),t._v(" "),a("ol",[a("li",[t._v("只能由字母、数字、下划线、$组成，但不能以数字开头；不能是关键字或保留字；大小写敏感，a和A两个不同的变量")]),t._v(" "),a("li",[t._v("函数、类名、(对象的属性)等也都要遵守这个命名规则")])]),t._v(" "),a("blockquote",[a("p",[t._v("在JS中所有的可以由我们"),a("strong",[t._v("自主命名")]),t._v("的都可以称为是"),a("strong",[t._v("标识符")])])]),t._v(" "),a("ol",{attrs:{start:"3"}},[a("li",[t._v("变量，函数，对象的属性一般都采用"),a("strong",[t._v("小驼峰命名法")]),t._v("，类名，构造函数采用"),a("strong",[t._v("大驼峰命名法")]),t._v("，即首字母也要大写")])]),t._v(" "),a("h3",{attrs:{id:"变量声明的提升"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#变量声明的提升"}},[t._v("#")]),t._v(" 变量声明的提升")]),t._v(" "),a("p",[t._v("你可以提前使用一个稍后才声明的变量，而不会引发异常；变量声明提升时，只提升变量的"),a("strong",[t._v("定义")]),t._v("，不会提升它的值")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 输出undefined,预编译阶段，预先读取所有变量定义。仿佛变量定义被提升了")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),t._v(" \n")])])]),a("p",[a("strong",[t._v("变量声明的提升")]),t._v("是 JavaScript的特性，所以经常出面试题在实际开发时，一定要先定义并给变量赋初值，然后再使用变量")]),t._v(" "),a("h2",{attrs:{id:"js基本数据类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js基本数据类型"}},[t._v("#")]),t._v(" JS基本数据类型")]),t._v(" "),a("h3",{attrs:{id:"数据类型分类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据类型分类"}},[t._v("#")]),t._v(" 数据类型分类")]),t._v(" "),a("ul",[a("li",[t._v("基本数据类型：string,boolean,number,"),a("strong",[t._v("symbol")]),t._v("（ES6新增）,undefined, null")]),t._v(" "),a("li",[t._v("引用数据类型："),a("strong",[t._v("object")])]),t._v(" "),a("li",[t._v("基本数据类型中有两个为特殊数据类型： null, undefined")]),t._v(" "),a("li",[t._v("js的常见内置对象：Date,Array,Math,Number,Boolean,String,Array,RegExp,Function...")])]),t._v(" "),a("blockquote",[a("p",[a("a",{attrs:{href:"https://juejin.cn/post/6918892282192068622#heading-4",target:"_blank",rel:"noopener noreferrer"}},[t._v("【面试说】聊聊JavaScript中的数据类型"),a("OutboundLink")],1)])]),t._v(" "),a("h3",{attrs:{id:"基本数据类型和引用数据类型的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本数据类型和引用数据类型的区别"}},[t._v("#")]),t._v(" 基本数据类型和引用数据类型的区别")]),t._v(" "),a("ul",[a("li",[t._v("基本数据类型存放在"),a("strong",[t._v("栈")]),t._v("里面，里面直接开辟一个空间，存放的是"),a("strong",[t._v("值")])])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/zhangfanhang/frank-notes/raw/master/JS%E7%AC%94%E8%AE%B0/js%E5%9F%BA%E7%A1%80/%E5%9B%BE%E7%89%87/%E6%A0%88%E5%86%85%E5%AD%98.png",alt:"栈内存"}})]),t._v(" "),a("ul",[a("li",[t._v("引用数据类型存放在"),a("strong",[t._v("堆")]),t._v("里面，首先在"),a("strong",[t._v("栈里面存放地址（十六进制表示）")]),t._v("，"),a("strong",[t._v("地址在指向堆里面的实例")]),t._v("，真正的对象实例存放在堆空间中")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/zhangfanhang/frank-notes/raw/master/JS%E7%AC%94%E8%AE%B0/js%E5%9F%BA%E7%A1%80/%E5%9B%BE%E7%89%87/%E5%A0%86%E5%86%85%E5%AD%98.png",alt:"堆内存"}})]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("简单类型传参")]),t._v(":函数的形参也可以看作为一个变量，当我们把一个值类型变量作为参数传递给函数的形参时，其实是把变量在栈空间里的值复制了一份给形参，那么在方法中对形参进行任何修改，都不会影响到外部的变量。")]),t._v(" "),a("li",[a("strong",[t._v("引用类型传参")]),t._v(":函数的形参也可以看成是一个变量，当我们把引用类型变量传递给形参时，其实是把变量在栈空间保存的堆地址复制给了形参，形参和实参其实保存的是同一个堆地址，所以操作的是同一个对象。")])]),t._v(" "),a("h3",{attrs:{id:"typeof运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#typeof运算符"}},[t._v("#")]),t._v(" typeof运算符")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/zhangfanhang/frank-notes/raw/master/JS%E7%AC%94%E8%AE%B0/js%E5%9F%BA%E7%A1%80/%E5%9B%BE%E7%89%87/typeof.png",alt:"typeof"}})]),t._v(" "),a("h3",{attrs:{id:"numeber数字类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#numeber数字类型"}},[t._v("#")]),t._v(" numeber数字类型")]),t._v(" "),a("ul",[a("li",[t._v("所有数字不分大小，不分整浮，不分正负，都是数字类型")]),t._v(" "),a("li",[t._v("介于0和1之间的小数，0可以省略")])]),t._v(" "),a("h4",{attrs:{id:"科学计数法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#科学计数法"}},[t._v("#")]),t._v(" 科学计数法")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("3e8 -> 300000000\n3e-4 -> 0.0003\n")])])]),a("h4",{attrs:{id:"不同进制的数字"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#不同进制的数字"}},[t._v("#")]),t._v(" 不同进制的数字")]),t._v(" "),a("ul",[a("li",[t._v("二进制以0b开头")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0b10")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2")]),t._v("\n")])])]),a("ul",[a("li",[t._v("八进制以0开头")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("017")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 15")]),t._v("\n")])])]),a("ul",[a("li",[t._v("十六进制以0x开头")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0xf")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 15")]),t._v("\n")])])]),a("h4",{attrs:{id:"特殊的数字型值nan"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#特殊的数字型值nan"}},[t._v("#")]),t._v(" 特殊的数字型值NaN")]),t._v(" "),a("ul",[a("li",[t._v("typeof NaN // number")]),t._v(" "),a("li",[t._v("0除以0的结果是NaN，事实上，在数学运算中，若结果不能得到数字，其结果往往都是NaN")]),t._v(" "),a("li",[t._v("NaN不自等")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[t._v("NaN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("NaN")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n")])])]),a("blockquote",[a("p",[a("a",{attrs:{href:"https://juejin.cn/post/6844904200233566222",target:"_blank",rel:"noopener noreferrer"}},[t._v("NaN不等于NaN"),a("OutboundLink")],1),t._v(" "),a("strong",[t._v("原因")]),t._v("：NaN是一种异常的结果，也就是“not a number”，虽然它也是一个变量，但它是描述性变量，'a'不是一个数字（not a number），'b'也不是一个数字（not a number），但是'a'和'b'并不相等，所以NaN != NaN也就成立了。")])]),t._v(" "),a("h3",{attrs:{id:"string字符串类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#string字符串类型"}},[t._v("#")]),t._v(" string字符串类型")]),t._v(" "),a("ul",[a("li",[a("p",[t._v('数字11和字符串"11"在语义上是不同的，前者表达一个数量，后者是一个文本')])]),t._v(" "),a("li",[a("p",[t._v("加号可以用来拼接多个字符串")])])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'zha'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ng'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 'zhang'")]),t._v("\n")])])]),a("ul",[a("li",[t._v('要将一个变量的值“插入”到字符串中，要“斩断链接"')])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" year "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2022")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'zfh'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("year"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("‘哈哈’ "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//zfh2022哈哈")]),t._v("\n")])])]),a("ul",[a("li",[t._v("空字符串，直接书写闭合的引号对即可")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),t._v("\n")])])]),a("ul",[a("li",[t._v("字符串的length属性")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'abcd'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//4")]),t._v("\n")])])]),a("h4",{attrs:{id:"字符串的常用方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字符串的常用方法"}},[t._v("#")]),t._v(" 字符串的常用方法")]),t._v(" "),a("h5",{attrs:{id:"charat-方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#charat-方法"}},[t._v("#")]),t._v(" charAt()方法")]),t._v(" "),a("p",[t._v("可以得到指定位置的字符")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'abcd'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("charAt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//b")]),t._v("\n")])])]),a("h5",{attrs:{id:"substring-substr-和slice-方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#substring-substr-和slice-方法"}},[t._v("#")]),t._v(" substring() ,substr()和slice()方法")]),t._v(" "),a("ul",[a("li",[t._v("substring()")])]),t._v(" "),a("ol",[a("li",[t._v("substring(a,b)可以得到从a开始到b结束（不包括b处）的子串")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'abcd'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("substring")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//‘ab'")]),t._v("\n")])])]),a("ol",{attrs:{start:"2"}},[a("li",[t._v("substring（a,b）方法如果省略第二个参数，返回的子串会一直到字符串的结尾")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'abcd'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("substring")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//‘bcd'")]),t._v("\n")])])]),a("ol",{attrs:{start:"3"}},[a("li",[t._v("substring（a,b）中，a可以大于b，数字顺序将自动调整为小数在前")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'abcd'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("substring")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//‘c'")]),t._v("\n")])])]),a("ul",[a("li",[t._v("substr()")])]),t._v(" "),a("ol",[a("li",[t._v("substr（a,b）中，将得到从a开始的长度为b的子串")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'abcd'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("substr")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//‘ab'")]),t._v("\n")])])]),a("ol",{attrs:{start:"2"}},[a("li",[t._v("substr（a,b）中，b可以省略，表示到字符串结尾")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'abcd'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("substr")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//‘bcd'")]),t._v("\n")])])]),a("ol",{attrs:{start:"3"}},[a("li",[t._v("substr（a,b）中，a可以是负数，表示倒数位置")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'abcd'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("substr")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//‘cd'")]),t._v("\n")])])]),a("ul",[a("li",[t._v("slice()")])]),t._v(" "),a("ol",[a("li",[t._v("slice（a,b）方法得到从a开始到b结束（不包括b处）的子串")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'abcd'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("slice")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//‘ab'")]),t._v("\n")])])]),a("ol",{attrs:{start:"2"}},[a("li",[t._v("slice（a,b）的参数a可以是负数")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'abcd'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("slice")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//‘b'")]),t._v("\n")])])]),a("ol",{attrs:{start:"3"}},[a("li",[t._v("slice（a,b）中，参数a必须小于参数b")])]),t._v(" "),a("h5",{attrs:{id:"三者对比"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三者对比"}},[t._v("#")]),t._v(" 三者对比")]),t._v(" "),a("ul",[a("li",[t._v("substring（a,b）和slice（a,b）功能基本一致，都是得到从a开始到b结束（不包括b）的子串，区别：")])]),t._v(" "),a("ol",[a("li",[t._v("substring（）可以自动交换两个参数位置，而slice（）不行；也就是说slice()中参数a必须小于参数b")]),t._v(" "),a("li",[t._v("slice（）的参数a可以是负数，而 substring（）不行。")])]),t._v(" "),a("ul",[a("li",[t._v("substr（a,b）中参数b是子串长度，而不是位置编号")])]),t._v(" "),a("h5",{attrs:{id:"touppercase-tolowercase"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#touppercase-tolowercase"}},[t._v("#")]),t._v(" toUpperCase() toLowerCase()")]),t._v(" "),a("ul",[a("li",[t._v("toUpperCase() 转为大写")]),t._v(" "),a("li",[t._v("toLowerCase() 转为小写")])]),t._v(" "),a("h5",{attrs:{id:"indexof"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#indexof"}},[t._v("#")]),t._v(" indexOf()")]),t._v(" "),a("ul",[a("li",[t._v("index0f()方法返回某个指定的字符串值在字符串中首次出现的位置")]),t._v(" "),a("li",[t._v("如果要检索的字符串值没有出现，则该返回-1")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'abcd'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("indexOf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 0")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'abcd'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("indexOf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'e'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// -1")]),t._v("\n")])])]),a("h3",{attrs:{id:"boolean-布尔-类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#boolean-布尔-类型"}},[t._v("#")]),t._v(" boolean（布尔）类型")]),t._v(" "),a("ul",[a("li",[t._v("布尔型值只有两个：true和false，分别表示真和假")])]),t._v(" "),a("h3",{attrs:{id:"undefined类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#undefined类型"}},[t._v("#")]),t._v(" undefined类型")]),t._v(" "),a("blockquote",[a("p",[t._v("undefined表示一个变量自然的、最原始的状态值，就是此处应该有一个值，但是还没有定义。")])]),t._v(" "),a("p",[t._v("undefined又是值，又是一种类型，这种类型只有它自己一个值")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// undefined")]),t._v("\n\n")])])]),a("h4",{attrs:{id:"场景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#场景"}},[t._v("#")]),t._v(" 场景")]),t._v(" "),a("ul",[a("li",[t._v("声明了一个变量，但没有赋值，就等于undefined")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// undefined")]),t._v("\n\n")])])]),a("ul",[a("li",[t._v("函数定义了形参，但没有传递实参，该参数等于undefined")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//函数定义了形参 a ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("f")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("a")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n     console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// undefined ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("  \n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("f")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//未传递实参")]),t._v("\n")])])]),a("ul",[a("li",[t._v("访问对象上不存在的属性，该属性的值为undefined")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v("  a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\na"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("p "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// undefined")]),t._v("\n\n")])])]),a("ul",[a("li",[t._v("函数没有返回值时，默认返回undefined")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("f")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\na "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// undefined")]),t._v("\n\n")])])]),a("h3",{attrs:{id:"null类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#null类型"}},[t._v("#")]),t._v(" null类型")]),t._v(" "),a("blockquote",[a("p",[t._v("null表示一个变量被人为的设置为空对象，而不是原始状态，即该处不应该有值")])]),t._v(" "),a("p",[t._v("使用typeof检测null值，结果是 object，这点 "),a("strong",[t._v("尤其要注意")]),t._v(" ,类型和 typeof检测结果并不总是一一对应，比如数组用typeof检测结果也是 object")]),t._v(" "),a("h4",{attrs:{id:"场景-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#场景-2"}},[t._v("#")]),t._v(" 场景")]),t._v(" "),a("ul",[a("li",[t._v("利用document.getElementById(‘XXX’) 寻找一个不存在的元素，将返回null")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'notExistElement'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n\n")])])]),a("ul",[a("li",[t._v("作为对象原型链的终点")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("Object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getPrototypeOf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// null")]),t._v("\n\n")])])]),a("h3",{attrs:{id:"null和undefined的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#null和undefined的区别"}},[t._v("#")]),t._v(" null和undefined的区别")]),t._v(" "),a("ol",[a("li",[t._v("数据类型不同")]),t._v(" "),a("li",[t._v('转换为数值区别:null是一个表示"无"的对象，转为数值时为0；undefined是一个表示"无"的原始值，转为数值时为NaN。')]),t._v(" "),a("li",[t._v("null == undefined //true ; null === undefined //false")])]),t._v(" "),a("blockquote",[a("p",[t._v("值类型的“虚无”用undefined，引用类型的“虚无”，用null。")])]),t._v(" "),a("h2",{attrs:{id:"数据类型的转换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据类型的转换"}},[t._v("#")]),t._v(" 数据类型的转换")]),t._v(" "),a("h3",{attrs:{id:"其他值→数字"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#其他值→数字"}},[t._v("#")]),t._v(" 其他值→数字")]),t._v(" "),a("h4",{attrs:{id:"使用-number-函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用-number-函数"}},[t._v("#")]),t._v(" 使用 Number()函数")]),t._v(" "),a("ul",[a("li",[t._v("字符串→数字")])]),t._v(" "),a("p",[t._v("纯数字字符串能变为数字，不是纯数字的字符串将转为NaN")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'123'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 123")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 0")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'粘'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// NaN")]),t._v("\n\n")])])]),a("ul",[a("li",[t._v("布尔值→数字")])]),t._v(" "),a("p",[t._v("true变为1，false变为0")]),t._v(" "),a("ul",[a("li",[t._v("undefined和null→数字")])]),t._v(" "),a("p",[t._v("undefined变为NaN，null变为0")]),t._v(" "),a("h4",{attrs:{id:"使用-parseint-函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用-parseint-函数"}},[t._v("#")]),t._v(" 使用 parseInt()函数")]),t._v(" "),a("p",[t._v("parseInt()函数的功能是将字符串转为整数")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseInt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'3.13'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//3 parseInt()将自动截掉第一个非数字字符之后的所有字符")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseInt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'3.13是一个数字'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//3 所有文字都将被截掉")]),t._v("\n")])])]),a("ul",[a("li",[t._v("如果字符串不是以数字开头，则转为NaN")]),t._v(" "),a("li",[t._v("parseInt()函数不四舍五入")])]),t._v(" "),a("h4",{attrs:{id:"使用parsefloat-函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用parsefloat-函数"}},[t._v("#")]),t._v(" 使用parseFloat()函数")]),t._v(" "),a("p",[t._v("parseFloat()函数的功能是将字符串转为浮点数")]),t._v(" "),a("ul",[a("li",[t._v("parseFloat()可以将小数字符串转为数字小数")]),t._v(" "),a("li",[t._v("parseFloat()将自动截掉第一个非数字字符且不是小数点之后的所有字符")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseInt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'3.13是一个数字'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//3.13")]),t._v("\n")])])]),a("ul",[a("li",[t._v("如果字符串不是以数字开头，则转为NaN")]),t._v(" "),a("li",[t._v("parseFloat()函数不四舍五入")])]),t._v(" "),a("h3",{attrs:{id:"其他值→字符串"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#其他值→字符串"}},[t._v("#")]),t._v(" 其他值→字符串")]),t._v(" "),a("h4",{attrs:{id:"使用-string-函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用-string-函数"}},[t._v("#")]),t._v(" 使用 String()函数")]),t._v(" "),a("ul",[a("li",[t._v("数字→字符串")])]),t._v(" "),a("p",[t._v("变为“长得相同”的字符串。")]),t._v(" "),a("p",[t._v("科学计数法和非10进制数字会转为10进制的值。")]),t._v(" "),a("ul",[a("li",[t._v("布尔值→字符串")])]),t._v(" "),a("p",[t._v("变为“长得相同”的字符串")]),t._v(" "),a("ul",[a("li",[t._v("undefined和null→字符串")])]),t._v(" "),a("p",[t._v("变为“长得相同”的字符串")]),t._v(" "),a("h4",{attrs:{id:"几乎所有值都有tostring-方法-功能是将值转为字符串"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#几乎所有值都有tostring-方法-功能是将值转为字符串"}},[t._v("#")]),t._v(" 几乎所有值都有toString()方法，功能是将值转为字符串")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// '123'")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("这里123已经不是原始类型了，而是被强制转换成了 Number 类型也就是对象类型，所以可以调用 toString 函数。")])]),t._v(" "),a("h3",{attrs:{id:"其他值→布尔值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#其他值→布尔值"}},[t._v("#")]),t._v(" 其他值→布尔值")]),t._v(" "),a("p",[t._v("使用 Boolean()函数")]),t._v(" "),a("ul",[a("li",[t._v("数字→布尔值")])]),t._v(" "),a("p",[t._v("0和NaN转为 false，其他数字都转为true")]),t._v(" "),a("ul",[a("li",[t._v("空字符串→布尔值")])]),t._v(" "),a("p",[t._v("空字符串变为 false，其他都转为true")]),t._v(" "),a("ul",[a("li",[t._v("undefined和null→布尔值")])]),t._v(" "),a("p",[t._v("转为false")])])}),[],!1,null,null,null);s.default=e.exports}}]);