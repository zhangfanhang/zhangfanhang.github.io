(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{484:function(a,t,v){"use strict";v.r(t);var s=v(14),r=Object(s.a)({},(function(){var a=this,t=a.$createElement,v=a._self._c||t;return v("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[v("h2",{attrs:{id:"jdk-jre-jvm三者关系"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#jdk-jre-jvm三者关系"}},[a._v("#")]),a._v(" JDK,JRE,JVM三者关系")]),a._v(" "),v("p",[v("img",{attrs:{src:"https://gitee.com/zhangfanhang/frank-notes/raw/master/java%E7%AC%94%E8%AE%B0/javaSE/java%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/%E5%9B%BE%E7%89%87/%E4%B8%89%E8%80%85%E5%85%B3%E7%B3%BB.png",alt:"三者关系"}})]),a._v(" "),v("ul",[v("li",[a._v("JDK=JRE+开发工具集（javac编译工具）")]),a._v(" "),v("li",[a._v("JRE=JVM+JAVA SE标准类库")])]),a._v(" "),v("h2",{attrs:{id:"注释"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#注释"}},[a._v("#")]),a._v(" 注释")]),a._v(" "),v("ul",[v("li",[a._v("单行注释： // this is a 注释")]),a._v(" "),v("li",[a._v("多行注释:")])]),a._v(" "),v("div",{staticClass:"language-java extra-class"},[v("pre",{pre:!0,attrs:{class:"language-java"}},[v("code",[v("span",{pre:!0,attrs:{class:"token comment"}},[a._v("/*\n    this is a 注释\n    this is a 注释\n*/")]),a._v("\n")])])]),v("ul",[v("li",[a._v("文档注释（java特有）=>javadoc")])]),a._v(" "),v("div",{staticClass:"language-java extra-class"},[v("pre",{pre:!0,attrs:{class:"language-java"}},[v("code",[v("span",{pre:!0,attrs:{class:"token comment"}},[a._v("/** \n    @author:frank\n    @version:v1.0\n*/")]),a._v("\n")])])]),v("p",[a._v("生成javadoc:javadoc -d mydoc -author -version HelloWorld.java")]),a._v(" "),v("h2",{attrs:{id:"关键字-保留字"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#关键字-保留字"}},[a._v("#")]),a._v(" 关键字 保留字")]),a._v(" "),v("p",[v("strong",[a._v("关键字")]),a._v("被java语言赋予了特殊含义，用作专门用途的字符串")]),a._v(" "),v("p",[a._v("关键字中所有字母都为小写")]),a._v(" "),v("p",[v("strong",[a._v("保留字")]),a._v("现有java版本尚未使用，但以后版本可能会作为关键字使用")]),a._v(" "),v("h2",{attrs:{id:"标识符"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#标识符"}},[a._v("#")]),a._v(" 标识符")]),a._v(" "),v("p",[a._v("java 对各种"),v("strong",[a._v("方法")]),a._v(" "),v("strong",[a._v("变量")]),a._v(" 和 "),v("strong",[a._v("类")]),a._v(" 等要素命名时使用的字符序列称为标识符")]),a._v(" "),v("blockquote",[v("p",[a._v("凡是可以自己起名字的地方都叫标识符")])]),a._v(" "),v("h3",{attrs:{id:"定义合法标识符的规则"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#定义合法标识符的规则"}},[a._v("#")]),a._v(" 定义合法标识符的规则")]),a._v(" "),v("ul",[v("li",[v("p",[a._v("字母大小写，0-9，_或$组成")])]),a._v(" "),v("li",[v("p",[a._v("数字不可以开头")])]),a._v(" "),v("li",[v("p",[a._v("不可以使用关键字和保留字，但能包含关键字和保留字")])]),a._v(" "),v("li",[v("p",[a._v("java中严格区分大小写 长度无限制")])]),a._v(" "),v("li",[v("p",[a._v("标识符不能包含空格")])])]),a._v(" "),v("h3",{attrs:{id:"java中的名称命名规范"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#java中的名称命名规范"}},[a._v("#")]),a._v(" java中的名称命名规范")]),a._v(" "),v("ul",[v("li",[a._v("包名：多单词组成时 所有字母都小写：xxxyyyzzz")]),a._v(" "),v("li",[a._v("类名接口名：多单词组成时 所有单词的首字母大写：\n(大驼峰) XxxYyyZzz")]),a._v(" "),v("li",[a._v("变量名，方法名：多单词组成时 第一个单词首字母小写，第二个单词开始每个单词首字母大写(小驼峰)：xxxYyyZzz")]),a._v(" "),v("li",[a._v("常量：所有字母大写，多单词时每个单词用下划线链接：XXX_YYY_ZZZ")])]),a._v(" "),v("h2",{attrs:{id:"变量"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#变量"}},[a._v("#")]),a._v(" 变量")]),a._v(" "),v("h3",{attrs:{id:"java定义变量的格式"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#java定义变量的格式"}},[a._v("#")]),a._v(" java定义变量的格式")]),a._v(" "),v("p",[a._v("数据类型 变量名 = 变量值;")]),a._v(" "),v("p",[a._v("变量必须先声明，后使用")]),a._v(" "),v("p",[a._v("变量都定义在其作用域内，在作用域内，它是有效的。{}")]),a._v(" "),v("p",[a._v("同一个作用域内 不可以声明两个同名的的变量")]),a._v(" "),v("h3",{attrs:{id:"变量按数据类型来分"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#变量按数据类型来分"}},[a._v("#")]),a._v(" 变量按数据类型来分")]),a._v(" "),v("p",[v("img",{attrs:{src:"https://gitee.com/zhangfanhang/frank-notes/raw/master/java%E7%AC%94%E8%AE%B0/javaSE/java%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/%E5%9B%BE%E7%89%87/%E5%8F%98%E9%87%8F%E5%88%86%E7%B1%BB%E6%8C%89%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B.png",alt:"变量分类按数据类型"}})]),a._v(" "),v("h4",{attrs:{id:"基本数据类型"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#基本数据类型"}},[a._v("#")]),a._v(" 基本数据类型")]),a._v(" "),v("h5",{attrs:{id:"整数类型"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#整数类型"}},[a._v("#")]),a._v(" 整数类型")]),a._v(" "),v("p",[v("img",{attrs:{src:"https://gitee.com/zhangfanhang/frank-notes/raw/master/java%E7%AC%94%E8%AE%B0/javaSE/java%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/%E5%9B%BE%E7%89%87/%E6%95%B4%E6%95%B0%E7%B1%BB%E5%9E%8B.png",alt:"整数类型"}})]),a._v(" "),v("ul",[v("li",[v("p",[v("strong",[a._v("java中的整型常量默认为int型")]),a._v(",声明long常量，必须以l或L结尾：long num = 123123123L")])]),a._v(" "),v("li",[v("p",[a._v("通常定义整数变量时使用int型,除非不足以表示较大的数，才使用long")])])]),a._v(" "),v("h5",{attrs:{id:"浮点类型"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#浮点类型"}},[a._v("#")]),a._v(" 浮点类型")]),a._v(" "),v("p",[v("img",{attrs:{src:"https://gitee.com/zhangfanhang/frank-notes/raw/master/java%E7%AC%94%E8%AE%B0/javaSE/java%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/%E5%9B%BE%E7%89%87/%E6%B5%AE%E7%82%B9%E7%B1%BB%E5%9E%8B.png",alt:"浮点类型"}})]),a._v(" "),v("ul",[v("li",[a._v("float：单精度，尾数可以精确到7位有效数字。很多情况下，精度很难满足需求。")]),a._v(" "),v("li",[a._v("double双精度，精度是float的两倍。通常采用此类型。")]),a._v(" "),v("li",[v("strong",[a._v("java的浮点型常量默认为 double型")]),a._v("，声明 float型常量，须后加“f或“F'。")]),a._v(" "),v("li",[a._v("float表示数值的范围比1ong还大")]),a._v(" "),v("li",[a._v("通常，定义浮点型变量时，使用 double型。")])]),a._v(" "),v("h5",{attrs:{id:"字符类型char"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#字符类型char"}},[a._v("#")]),a._v(" 字符类型char")]),a._v(" "),v("ul",[v("li",[v("p",[a._v("定义char类型变量，通常使用一对'',内部只能写一个字符")])]),a._v(" "),v("li",[v("p",[a._v("表示方式：")])])]),a._v(" "),v("ol",[v("li",[a._v("声明一个字符")]),a._v(" "),v("li",[a._v("转义字符 换行符\\n  制表符(tab)\\t")]),a._v(" "),v("li",[a._v("直接使用Unicode值来表示字符型常量：char c='\\u0043' // c")])]),a._v(" "),v("h5",{attrs:{id:"boolean类型"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#boolean类型"}},[a._v("#")]),a._v(" boolean类型")]),a._v(" "),v("p",[a._v("true false")]),a._v(" "),v("h5",{attrs:{id:"基本数据类型之间的运算规则"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#基本数据类型之间的运算规则"}},[a._v("#")]),a._v(" 基本数据类型之间的运算规则")]),a._v(" "),v("blockquote",[v("p",[a._v("不包含布尔类型")])]),a._v(" "),v("ol",[v("li",[a._v("自动类型提升")])]),a._v(" "),v("p",[a._v("byte、char、short -> int -> long->  float -> double")]),a._v(" "),v("p",[a._v("当容量小（表示数的范围的大和小）的数据类型的变量，与容量大的数据类型的变量做运算时，结果自动提升为容量大的数据类型")]),a._v(" "),v("p",[a._v("特别的："),v("strong",[a._v("当byte、char、short三种类型的变量做运算时，结果为int型")]),a._v("。byte+byte也是int....")]),a._v(" "),v("ol",{attrs:{start:"2"}},[v("li",[a._v("强制类型转换：自动类型提升的逆运算")])]),a._v(" "),v("p",[a._v("使用强转符：(),强制类型转换，可能导致精度损失")]),a._v(" "),v("div",{staticClass:"language-java extra-class"},[v("pre",{pre:!0,attrs:{class:"language-java"}},[v("code",[v("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("double")]),a._v(" a "),v("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),v("span",{pre:!0,attrs:{class:"token number"}},[a._v("12.9")]),a._v("\n"),v("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" b"),v("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),v("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("a "),v("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 12 ")]),a._v("\n")])])]),v("p",[a._v("21/8/23 P60")]),a._v(" "),v("h3",{attrs:{id:"变量按声明位置来分"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#变量按声明位置来分"}},[a._v("#")]),a._v(" 变量按声明位置来分")]),a._v(" "),v("p",[v("strong",[a._v("面向对象部分学习")])])])}),[],!1,null,null,null);t.default=r.exports}}]);