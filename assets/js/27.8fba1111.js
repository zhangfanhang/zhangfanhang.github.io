(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{473:function(a,s,t){"use strict";t.r(s);var r=t(14),e=Object(r.a)({},(function(){var a=this,s=a.$createElement,t=a._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("blockquote",[t("p",[a._v("运算符：也叫操作符，是一种符号。通过运算符可以对一个或多个值进行运算，并获取运算结果。\n表达式：由数字、运算符、变量的组合（组成的式子）。")])]),a._v(" "),t("h2",{attrs:{id:"算术表达式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#算术表达式"}},[a._v("#")]),a._v(" 算术表达式")]),a._v(" "),t("h3",{attrs:{id:"算术运算符"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#算术运算符"}},[a._v("#")]),a._v(" 算术运算符")]),a._v(" "),t("h4",{attrs:{id:"加减乘除"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#加减乘除"}},[a._v("#")]),a._v(" 加减乘除")]),a._v(" "),t("ul",[t("li",[a._v("加减的符号和数学一致，乘法是*号，除法是/")]),a._v(" "),t("li",[a._v("默认情况，乘除法的优先级要高于加法和減法；必要时可以使用圆括号来改变运算的顺序")]),a._v(" "),t("li",[a._v("加号有“加法”和“连字符”两种作用,如果加号两边的操作数"),t("strong",[a._v("都是数字")]),a._v("，则为“加法”，否则为连字符")])]),a._v(" "),t("blockquote",[t("p",[a._v("注意：在运算中，除了加法，其余的运算都会将字符串先转换为数字之后再进行计算，但是两个数据相加，如果有一方是字符串的话，加号的作用就是将他们进行拼接。")])]),a._v(" "),t("h4",{attrs:{id:"取余运算"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#取余运算"}},[a._v("#")]),a._v(" 取余运算")]),a._v(" "),t("ul",[t("li",[a._v("取余运算也叫作“求模运算”，用百分号“%″表示")]),a._v(" "),t("li",[a._v("a%b表示求a除以b的余数，它不关心整数部分，只关心余数")])]),a._v(" "),t("h3",{attrs:{id:"隐式类型转换"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#隐式类型转换"}},[a._v("#")]),a._v(" 隐式类型转换")]),a._v(" "),t("ul",[t("li",[a._v("如果参与数学运算的某操作数不是数字型，那么 JavaScript会自动将此操作数转换为数字型")]),a._v(" "),t("li",[a._v("隐式转换的本质是内部调用 Number()函数")])]),a._v(" "),t("h3",{attrs:{id:"有关ieee754"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#有关ieee754"}},[a._v("#")]),a._v(" 有关IEEE754")]),a._v(" "),t("ul",[t("li",[a._v("在 JavaScript中，有些小数的数学运算不是很精准")])]),a._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0.1")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0.2")]),a._v(" 不等于 "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0.3")]),a._v("\n")])])]),t("ul",[t("li",[a._v("Javascrip使用了IEEE754二进制浮点数算术标准，这会使一些个别的小数运算产生“丢失精度”问题")]),a._v(" "),t("li",[a._v("解决办法：在进行小数运算时，要调用数字的 toFixed() 方法保留指定的小数位数")])]),a._v(" "),t("h3",{attrs:{id:"幂和开根号"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#幂和开根号"}},[a._v("#")]),a._v(" 幂和开根号")]),a._v(" "),t("p",[a._v("Javascript中没有提供幂计算、开根号的运算符。需要使用Math对象的相关方法进行计算。")]),a._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[a._v("Math"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v(" pow （"),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v("， "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("3")]),a._v("） "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 8")]),a._v("\nMath"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v(" pow （"),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("3")]),a._v("， "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v("） "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 9")]),a._v("\nMath"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v(" sgrt（"),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("81")]),a._v("）  "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 9")]),a._v("\nMath"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v(" sart（"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("81")]),a._v("） "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// NaN")]),a._v("\n")])])]),t("h3",{attrs:{id:"向上取整和向下取整"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#向上取整和向下取整"}},[a._v("#")]),a._v(" 向上取整和向下取整")]),a._v(" "),t("p",[a._v("Math.ceil()向上取整； Math.floor()向下取整")]),a._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[a._v("console"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("Math"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("ceil")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("123.1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 124")]),a._v("\nconsole"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("Math"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("floor")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("123.1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 123")]),a._v("\n")])])]),t("h2",{attrs:{id:"关系表达式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#关系表达式"}},[a._v("#")]),a._v(" 关系表达式")]),a._v(" "),t("h3",{attrs:{id:"关系运算符"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#关系运算符"}},[a._v("#")]),a._v(" 关系运算符")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/zhangfanhang/frank-notes/raw/master/JS%E7%AC%94%E8%AE%B0/js%E5%9F%BA%E7%A1%80/%E5%9B%BE%E7%89%87/%E5%85%B3%E7%B3%BB%E8%BF%90%E7%AE%97%E7%AC%A6.png",alt:"关系运算符"}})]),a._v(" "),t("h3",{attrs:{id:"判断是否相等"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#判断是否相等"}},[a._v("#")]),a._v(" 判断是否相等")]),a._v(" "),t("p",[a._v("Javascript中等号=表示赋值，而并不是相等。判断相等应该使用==运算符")]),a._v(" "),t("h3",{attrs:{id:"相等和全等"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#相等和全等"}},[a._v("#")]),a._v(" 相等和全等")]),a._v(" "),t("ul",[t("li",[a._v("两个等号==运算符不比较值的类型，它会进行隐式转换后比较值是否相等")]),a._v(" "),t("li",[a._v("三个等号===运算符，不仅比较值是否相同，也比较类型是否相同")])]),a._v(" "),t("blockquote",[t("p",[a._v("区别就是===在比较相等时，不转换操作数。只有两个操作数在不转换的前提下才返回true。")])]),a._v(" "),t("h3",{attrs:{id:"nan不自等"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#nan不自等"}},[a._v("#")]),a._v(" NaN不自等")]),a._v(" "),t("p",[a._v("NaN作为一个特殊的数字类型值，它在用==比较的时也有特殊的结果")]),a._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token number"}},[a._v("NaN")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("NaN")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// false")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("NaN")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("===")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("NaN")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// false")]),a._v("\n\n")])])]),t("h3",{attrs:{id:"如何判断某变量值为nan"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#如何判断某变量值为nan"}},[a._v("#")]),a._v(" 如何判断某变量值为NaN")]),a._v(" "),t("ul",[t("li",[a._v("isNaN()函数可以用来判断变量值是否为NaN")])]),a._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("isNaN")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("4")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//false")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("isNaN")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("NaN")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//true")]),a._v("\n")])])]),t("ul",[t("li",[a._v("但 isNaN()也不好用，它的机理是：只要该变量传入Number()的执行结果是NaN，则 isNaN()函数都会得到true")])]),a._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("isNaN")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("undefined")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// true")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("isNaN")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'我懂得'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// true")]),a._v("\n\n")])])]),t("h3",{attrs:{id:"特殊值的相等关系"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#特殊值的相等关系"}},[a._v("#")]),a._v(" 特殊值的相等关系")]),a._v(" "),t("ul",[t("li",[a._v("规范中提到， 要比较相等性之前，不能将 null 和 undefined 转换成其他任何值，并且"),t("strong",[a._v("规定")]),a._v("null 和 undefined 是相等的。")]),a._v(" "),t("li",[a._v("null 和 undefined都代表着无效的值。")])]),a._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("null")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("undefined")]),a._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// true")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("null")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// false ")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("undefined")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// false ")]),a._v("\n\n")])])]),t("ul",[t("li",[a._v("全等于状态下，是false，这个很好理解。它们不属于同一数据类型。")])]),a._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("null")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("===")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("undefined")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// false")]),a._v("\n")])])]),t("h3",{attrs:{id:"js中没有连比"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#js中没有连比"}},[a._v("#")]),a._v(" js中没有连比")]),a._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("a"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<=")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("15")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// ❌")]),a._v("\n\na"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("&&")]),a._v(" a"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<=")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("15")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// √")]),a._v("\n")])])]),t("h2",{attrs:{id:"逻辑表达式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#逻辑表达式"}},[a._v("#")]),a._v(" 逻辑表达式")]),a._v(" "),t("h3",{attrs:{id:"逻辑运算符"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#逻辑运算符"}},[a._v("#")]),a._v(" 逻辑运算符")]),a._v(" "),t("ul",[t("li",[a._v("与 &&")]),a._v(" "),t("li",[a._v("或 ||")]),a._v(" "),t("li",[a._v("非 !")])]),a._v(" "),t("h3",{attrs:{id:"非运算"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#非运算"}},[a._v("#")]),a._v(" 非运算")]),a._v(" "),t("p",[a._v("非运算的结果一定是布尔值")]),a._v(" "),t("h3",{attrs:{id:"与运算"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#与运算"}},[a._v("#")]),a._v(" 与运算")]),a._v(" "),t("p",[a._v("都真才真")]),a._v(" "),t("h3",{attrs:{id:"或运算"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#或运算"}},[a._v("#")]),a._v(" 或运算")]),a._v(" "),t("p",[a._v("有真就真")]),a._v(" "),t("h3",{attrs:{id:"短路运算"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#短路运算"}},[a._v("#")]),a._v(" 短路运算")]),a._v(" "),t("h4",{attrs:{id:"a-b"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#a-b"}},[a._v("#")]),a._v(" a&&b")]),a._v(" "),t("ul",[t("li",[a._v("如果a是真的，b的真假决定结果，b真结果就真，b假结果就假，所以它的结果就是b")]),a._v(" "),t("li",[a._v("如果a是假的，不用看b了，被短路了。结果就是a")])]),a._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token number"}},[a._v("3")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("&&")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("6")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 6")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("null")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("&&")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// null")]),a._v("\n")])])]),t("h4",{attrs:{id:"a-b-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#a-b-2"}},[a._v("#")]),a._v(" a || b")]),a._v(" "),t("ul",[t("li",[a._v("如果a是真的，不用看b了，被短路了。结果就是a")]),a._v(" "),t("li",[a._v("如果a是假的，b的真假决定结果，b真结果就真，b假结果就假，所以它的结果就是b")])]),a._v(" "),t("h3",{attrs:{id:"逻辑运算顺序"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#逻辑运算顺序"}},[a._v("#")]),a._v(" 逻辑运算顺序")]),a._v(" "),t("p",[a._v("逻辑运算的优先级是：非→与→或")]),a._v(" "),t("h2",{attrs:{id:"赋值表达式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#赋值表达式"}},[a._v("#")]),a._v(" 赋值表达式")]),a._v(" "),t("h3",{attrs:{id:"赋值运算符"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#赋值运算符"}},[a._v("#")]),a._v(" 赋值运算符")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/zhangfanhang/frank-notes/raw/master/JS%E7%AC%94%E8%AE%B0/js%E5%9F%BA%E7%A1%80/%E5%9B%BE%E7%89%87/%E8%B5%8B%E5%80%BC%E8%BF%90%E7%AE%97%E7%AC%A6.png",alt:"赋值运算符"}})]),a._v(" "),t("h4",{attrs:{id:""}},[t("a",{staticClass:"header-anchor",attrs:{href:"#"}},[a._v("#")]),a._v(" +=")]),a._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" a"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("6")]),a._v("\na"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+=")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("5")]),a._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// a=a+5")]),a._v("\nconsole"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 11")]),a._v("\n")])])]),t("h4",{attrs:{id:"自增运算"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#自增运算"}},[a._v("#")]),a._v(" 自增运算")]),a._v(" "),t("p",[a._v("++  是自增运算符，表示在自身基础上加1")]),a._v(" "),t("p",[a._v("a++ 先用再加，++a先加再用")]),a._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" a"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" b"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("++")]),a._v("a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\nconsole"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("b"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 4")]),a._v("\n")])])]),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" a"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" b"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("a"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("++")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\nconsole"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("b"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 3")]),a._v("\n")])])]),t("h2",{attrs:{id:"综合表达式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#综合表达式"}},[a._v("#")]),a._v(" 综合表达式")]),a._v(" "),t("p",[a._v("运算顺序：非运算→数学运算→关系运算→逻辑运算")]),a._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("!")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("5")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("4")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("4")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("||")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("3")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// true")]),a._v("\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);