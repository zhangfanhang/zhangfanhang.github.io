(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{482:function(t,a,s){"use strict";s.r(a);var n=s(14),r=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"一切都是对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一切都是对象"}},[t._v("#")]),t._v(" 一切都是对象")]),t._v(" "),s("p",[s("strong",[t._v("“一切都是对象”这句话的重点在于如何去理解“对象”这个概念。")])]),t._v(" "),s("p",[t._v("——当然，也不是所有的都是对象，"),s("strong",[t._v("值类型就不是对象。")])]),t._v(" "),s("p",[t._v("首先咱们还是先看看javascript中一个常用的运算符——typeof。typeof应该算是咱们的老朋友，还有谁没用过它？")]),t._v(" "),s("p",[t._v("typeof函数输出的一共有几种类型，在此列出：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("show")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("x")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n            console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// undefined")]),t._v("\n            console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// number")]),t._v("\n            console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'abc'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// string")]),t._v("\n            console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// boolean")]),t._v("\n\n            console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//function")]),t._v("\n\n            console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//object")]),t._v("\n            console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//object")]),t._v("\n            console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//object")]),t._v("\n            console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Number")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//object")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("show")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("以上代码列出了typeof输出的结果，其中上面的四种（undefined, number, string, boolean）属于简单的"),s("strong",[t._v("值类型")]),t._v("，不是对象。剩下的几种情况——函数、数组、对象、null、new Number(10)都是对象。他们都是引用类型。")]),t._v(" "),s("p",[t._v("判断一个变量是不是对象非常简单。值类型的类型判断用typeof，引用类型的类型判断用instanceof。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("fn")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fn "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])])]),s("p",[t._v("那么在javascript中的对象，到底该如何定义呢？")]),t._v(" "),s("p",[s("strong",[t._v("对象——若干属性的集合")]),t._v("。")]),t._v(" "),s("p",[t._v("java或者C#中的对象都是new一个class出来的，而且里面有字段、属性、方法，规定的非常严格。但是javascript就比较随意了——数组是对象，函数是对象，对象还是对象。对象里面的一切都是属性，只有属性，没有方法。那么这样方法如何表示呢？——方法也是一种属性。因为它的属性表示为键值对的形式。")]),t._v(" "),s("p",[t._v("而且，更加好玩的事，javascript中的对象可以任意的扩展属性，没有class的约束。这个大家应该都知道，就不再强调了。")]),t._v(" "),s("p",[t._v("先说个最常见的例子：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" obj"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    a"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("b")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("x")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    c"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'alex'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        year"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1999")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),s("p",[t._v("以上代码中，obj是一个自定义的对象，其中a、b、c就是它的属性，而且在c的属性值还是一个对象，它又有name、year两个属性。")]),t._v(" "),s("p",[t._v("这个可能比较好理解，那么函数和数组也可以这样定义属性吗？——当然不行，但是它可以用另一种形式，总之函数/数组之流，"),s("strong",[t._v("只要是对象，它就是属性的集合。")])]),t._v(" "),s("p",[t._v("以函数为例子：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("fn")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        fn"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        fn"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("b")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        fn"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("c "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"王福朋"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            year"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1988")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])])]),s("p",[t._v("上段代码中，函数就作为对象被赋值了a、b、c三个属性——很明显，这就是属性的集合吗。")]),t._v(" "),s("p",[t._v("你问：这个有用吗？")]),t._v(" "),s("p",[t._v("回答：可以看看jQuery源码！")]),t._v(" "),s("p",[t._v("在jQuery源码中，“jQuery”或者“$”，这个变量其实是一个函数，不信你可以叫咱们的老朋友typeof验证一下。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" $"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// function")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("$"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("trim")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('" ABC "')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("验明正身！的确是个函数。那么咱们常用的 $.trim() 也是个函数，经常用，就不用验了吧！")]),t._v(" "),s("p",[t._v("很明显，这就是在$或者jQuery函数上加了一个trim属性，"),s("strong",[t._v("属性值是函数，作用是截取前后空格。")])]),t._v(" "),s("p",[t._v("其次要解释的就是本文的内容 —— "),s("strong",[t._v("一切（引用类型）都是对象，对象是属性的集合")]),t._v("。 最需要了解的就是对象的概念，和java/C#完全不一样。所以，切记切记")]),t._v(" "),s("p",[t._v("最后，有个疑问。在typeof的输出类型中，function和object都是对象，为何却要输出两种答案呢？都叫做object不行吗？——当然不行。")]),t._v(" "),s("p",[t._v("具体原因，且听下回分解！")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("一切引用类型都是对象，对象是属性的集合。对象里面的一切都是属性，只有属性，没有方法，即方法也是一种属性。函数也可以添加属性")])]),t._v(" "),s("h2",{attrs:{id:"函数和对象的关系"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#函数和对象的关系"}},[t._v("#")]),t._v(" 函数和对象的关系")]),t._v(" "),s("p",[t._v("上文 (一切都是对象)已经提到，函数就是对象的一种，因为通过instanceof函数可以判断。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("fn")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fn "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])])]),s("p",[t._v("函数是一种对象，"),s("strong",[t._v("但是函数却不像数组一样——你可以说数组是对象的一种，因为数组就像是对象的一个子集一样。但是函数与对象之间，却不仅仅是一种包含和被包含的关系，函数和对象之间的关系比较复杂，甚至有一点鸡生蛋蛋生鸡的逻辑，咱们这一节就缕一缕。")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Fn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'王福朋'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("year "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1988")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" fn1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Fn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\n")])])]),s("p",[t._v("面的这个例子很简单，它能说明："),s("strong",[t._v("对象可以通过函数来创建")]),t._v(" 对！也只能说明这一点。")]),t._v(" "),s("p",[t._v("但是我要说——"),s("strong",[t._v("对象都是通过函数创建的")]),t._v("——有些人可能反驳：不对！因为：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" obj "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" arr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'x'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])])]),s("p",[t._v("但是不好意思，这个——真的——是一种——“快捷方式”，在编程语言中，一般叫做“语法糖”。")]),t._v(" "),s("p",[t._v("其实以上代码的本质是：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//var obj = { a: 10, b: 20 };")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//var arr = [5, 'x', true];")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" obj "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("b "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" arr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Array")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'x'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\n")])])]),s("p",[t._v("而其中的 Object 和 Array 都是函数：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Object"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// function")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Array"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// function")]),t._v("\n\n")])])]),s("p",[t._v("所以，可以很负责任的说——"),s("strong",[t._v("对象都是通过函数来创建的。")])]),t._v(" "),s("p",[t._v("现在是不是糊涂了—— 对象是函数创建的，而函数却又是一种对象——天哪！函数和对象到底是什么关系啊？")]),t._v(" "),s("p",[t._v("别着急！揭开这个谜底，还得先去了解一下另一位老朋友——prototype原型。")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("对象都是通过函数来创建的.而函数又是对象。")])]),t._v(" "),s("h2",{attrs:{id:"prototype原型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#prototype原型"}},[t._v("#")]),t._v(" prototype原型")]),t._v(" "),s("p",[t._v("在咱们的第一节中说道,"),s("strong",[t._v("函数也是一种对象")]),t._v("。他也是属性的集合，你也可以对函数进行自定义属性。")]),t._v(" "),s("p",[t._v("不用等咱们去试验，javascript自己就先做了表率，人家就默认的给函数一个属性——prototype。对，每个函数都有一个属性叫做"),s("strong",[t._v("prototype")]),t._v("。")]),t._v(" "),s("p",[t._v("这个prototype的属性值是一个对象（"),s("strong",[t._v("属性的集合，再次强调！")]),t._v("），默认的只有一个叫做constructor的属性，指向这个函数本身。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/zhangfanhang/frank-notes/raw/master/JS%E7%AC%94%E8%AE%B0/js%E7%9A%84%E4%B8%89%E5%BA%A7%E5%A4%A7%E5%B1%B1/%E5%9B%BE%E7%89%87/prototype1.png",alt:"prototype1"}})]),t._v(" "),s("p",[t._v("如上图，SuperType是是一个函数，右侧的方框就是它的原型。")]),t._v(" "),s("p",[t._v("原型既然作为对象，属性的集合，不可能就只弄个constructor来玩玩，肯定可以自定义的增加许多属性。例如这位Object大哥，人家的prototype里面，就有好几个其他属性。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/zhangfanhang/frank-notes/raw/master/JS%E7%AC%94%E8%AE%B0/js%E7%9A%84%E4%B8%89%E5%BA%A7%E5%A4%A7%E5%B1%B1/%E5%9B%BE%E7%89%87/prototype2.png",alt:"prototype2"}})]),t._v(" "),s("p",[t._v("咦，有些方法怎么似曾相似？")]),t._v(" "),s("p",[t._v("对！别着急，之后会让你知道他们为何似曾相识。")]),t._v(" "),s("p",[t._v("接着往下说，你也可以在自己"),s("strong",[t._v("自定义的函数的prototype中新增自己的属性")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Fn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Fn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'王福朋'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Fn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("getYear")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1988")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n \n\n")])])]),s("p",[t._v("看到没有，这样就变成了")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/zhangfanhang/frank-notes/raw/master/JS%E7%AC%94%E8%AE%B0/js%E7%9A%84%E4%B8%89%E5%BA%A7%E5%A4%A7%E5%B1%B1/%E5%9B%BE%E7%89%87/prototype3.png",alt:"prototype3"}})]),t._v(" "),s("p",[t._v("但是，这样做有何用呢？如果用咱们自己的代码来演示，就是这样")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Fn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Fn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'王福朋'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Fn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("getYear")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1988")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" fn "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Fn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fn"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fn"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getYear")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\n")])])]),s("p",[t._v("即，Fn是一个函数，fn对象是从Fn函数new出来的，这样fn对象就可以调用Fn.prototype中的属性。")]),t._v(" "),s("p",[t._v("因为每个对象都有一个隐藏的属性——“"),s("strong",[t._v("proto")]),t._v("”，这个属性引用了创建这个对象的函数的prototype。即：fn."),s("strong",[t._v("proto")]),t._v(" === Fn.prototype")]),t._v(" "),s("p",[t._v('这里的"'),s("strong",[t._v("proto")]),t._v('"成为“隐式原型”，下回继续分解。')]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("每个函数都有一个prototype，构造函数的prototype是它实例的原型。对象有一个__proto__属性指向它的构造函数的prototype。我们在protype上添加属性，实例也可以访问。")])]),t._v(" "),s("h2",{attrs:{id:"隐式原型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#隐式原型"}},[t._v("#")]),t._v(" 隐式原型")]),t._v(" "),s("p",[t._v("上节已经提到，每个函数function都有一个prototype，即原型。这里再加一句话——每个对象都有一个__proto__，可成为隐式原型。")]),t._v(" "),s("p",[t._v("这个__proto__是一个隐藏的属性，javascript不希望开发者用到这个属性值，有的低版本浏览器甚至不支持这个属性值。所以你在Visual Studio 2012这样很高级很智能的编辑器中，都不会有__proto__的智能提示，但是你不用管它，直接写出来就是了。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/zhangfanhang/frank-notes/raw/master/JS%E7%AC%94%E8%AE%B0/js%E7%9A%84%E4%B8%89%E5%BA%A7%E5%A4%A7%E5%B1%B1/%E5%9B%BE%E7%89%87/%E9%9A%90%E5%BC%8F%E5%8E%9F%E5%9E%8B1.png",alt:"隐式原型1"}})]),t._v(" "),s("p",[t._v("上面截图看来，obj.__proto__和Object.prototype的属性一样！这么巧！")]),t._v(" "),s("p",[s("strong",[t._v("答案就是一样")]),t._v("。")]),t._v(" "),s("p",[t._v("obj这个对象本质上是被Object函数创建的，因此obj."),s("strong",[t._v("proto")]),t._v("=== Object.prototype。我们可以用一个图来表示。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/zhangfanhang/frank-notes/raw/master/JS%E7%AC%94%E8%AE%B0/js%E7%9A%84%E4%B8%89%E5%BA%A7%E5%A4%A7%E5%B1%B1/%E5%9B%BE%E7%89%87/%E9%9A%90%E5%BC%8F%E5%8E%9F%E5%9E%8B2.png",alt:"隐式原型2"}})]),t._v(" "),s("p",[t._v("那么上图中的“Object.prototype”也是一个对象，它的__proto__指向哪里？")]),t._v(" "),s("p",[t._v("好问题！")]),t._v(" "),s("p",[t._v("在说明“Object.prototype”之前，先说一下自定义函数的prototype。自定义函数的prototype本质上就是和 var obj = {} 是一样的，都是被Object创建，所以它的__proto__指向的就是Object.prototype。")]),t._v(" "),s("p",[s("strong",[t._v("但是Object.prototype却是一个特例——它的__proto__指向的是null，切记切记！")])]),t._v(" "),s("blockquote",[s("p",[t._v("批注：这就是原型链的终点")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/zhangfanhang/frank-notes/raw/master/JS%E7%AC%94%E8%AE%B0/js%E7%9A%84%E4%B8%89%E5%BA%A7%E5%A4%A7%E5%B1%B1/%E5%9B%BE%E7%89%87/%E9%9A%90%E5%BC%8F%E5%8E%9F%E5%9E%8B3.png",alt:"隐式原型3"}})]),t._v(" "),s("p",[t._v("还有——函数也是一种对象，函数也有__proto__吗？")]),t._v(" "),s("p",[t._v("又一个好问题！——当然有。")]),t._v(" "),s("p",[t._v("函数也不是从石头缝里蹦出来的，函数也是被创建出来的。谁创建了函数呢？——Function——注意这个大写的“F”。")]),t._v(" "),s("p",[t._v("且看如下代码。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/zhangfanhang/frank-notes/raw/master/JS%E7%AC%94%E8%AE%B0/js%E7%9A%84%E4%B8%89%E5%BA%A7%E5%A4%A7%E5%B1%B1/%E5%9B%BE%E7%89%87/%E9%9A%90%E5%BC%8F%E5%8E%9F%E5%9E%8B4.png",alt:"隐式原型4"}})]),t._v(" "),s("p",[t._v("以上代码中，第一种方式是比较传统的函数创建方式，第二种是用new Functoin创建。")]),t._v(" "),s("p",[t._v("首先根本"),s("strong",[t._v("不推荐用第二种方式")]),t._v("。")]),t._v(" "),s("p",[t._v("这里只是向大家演示，函数是被Function创建的。")]),t._v(" "),s("p",[t._v("好了，根据上面说的一句话——对象的__proto__指向的是创建它的函数的prototype，就会出现：Object."),s("strong",[t._v("proto")]),t._v("=== Function.prototype。用一个图来表示。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/zhangfanhang/frank-notes/raw/master/JS%E7%AC%94%E8%AE%B0/js%E7%9A%84%E4%B8%89%E5%BA%A7%E5%A4%A7%E5%B1%B1/%E5%9B%BE%E7%89%87/%E9%9A%90%E5%BC%8F%E5%8E%9F%E5%9E%8B5.png",alt:"隐式原型5"}})]),t._v(" "),s("p",[t._v("上图中，很明显的标出了：自定义函数Foo.__proto__指向Function.prototype，Object.__proto__指向Function.prototype，唉，"),s("strong",[t._v("怎么还有一个 Function.__proto__指向Function.prototype？这不成了循环引用了？")])]),t._v(" "),s("p",[t._v("对！是一个环形结构。")]),t._v(" "),s("p",[t._v("其实稍微想一下就明白了。Function也是一个函数，函数是一种对象，也有__proto__属性。既然是函数，那么它一定是被Function创建。所以——"),s("strong",[t._v("Function是被自身创建的")]),t._v("。所以它的__proto__指向了自身的Prototype。")]),t._v(" "),s("p",[t._v("最后一个问题：Function.prototype指向的对象，它的__proto__是不是也指向Object.prototype？")]),t._v(" "),s("p",[t._v("答案是肯定的。因为Function.prototype指向的对象也是一个普通的被Object创建的对象，所以也遵循基本的规则。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/zhangfanhang/frank-notes/raw/master/JS%E7%AC%94%E8%AE%B0/js%E7%9A%84%E4%B8%89%E5%BA%A7%E5%A4%A7%E5%B1%B1/%E5%9B%BE%E7%89%87/%E9%9A%90%E5%BC%8F%E5%8E%9F%E5%9E%8B6.png",alt:"隐式原型6"}})]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("我只能说一句NB解释的太清楚了！")])]),t._v(" "),s("h2",{attrs:{id:"instanceof"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#instanceof"}},[t._v("#")]),t._v(" instanceof")]),t._v(" "),s("blockquote",[s("p",[t._v("instanceof 运算符用于检测构造函数的 prototype 属性是否出现在某个实例对象的原型链上。")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("  object "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("constructor")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//object 某个实例对象 constructor 某个构造函数")]),t._v("\n")])])]),s("p",[t._v("又介绍一个老朋友——instanceof。")]),t._v(" "),s("p",[t._v("对于值类型，你可以通过typeof判断，string/number/boolean都很清楚，但是typeof在判断到引用类型的时候，返回值只有object/function，你不知道它到底是一个object对象，还是数组，还是new Number等等。")]),t._v(" "),s("p",[t._v("这个时候就需要用到instanceof。例如：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/zhangfanhang/frank-notes/raw/master/JS%E7%AC%94%E8%AE%B0/js%E7%9A%84%E4%B8%89%E5%BA%A7%E5%A4%A7%E5%B1%B1/%E5%9B%BE%E7%89%87/instanceof.png",alt:"instanceof"}})]),t._v(" "),s("p",[t._v("上图中，f1这个对象是被Foo创建，但是“f1 instanceof Object”为什么是true呢？")]),t._v(" "),s("p",[t._v("至于为什么过会儿再说，先把instanceof判断的规则告诉大家。根据以上代码看下图：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/zhangfanhang/frank-notes/raw/master/JS%E7%AC%94%E8%AE%B0/js%E7%9A%84%E4%B8%89%E5%BA%A7%E5%A4%A7%E5%B1%B1/%E5%9B%BE%E7%89%87/instanceof2.png",alt:"instanceof2"}})]),t._v(" "),s("p",[t._v("Instanceof运算符的第一个变量是一个对象，暂时称为A；第二个变量一般是一个函数，暂时称为B。")]),t._v(" "),s("p",[t._v("Instanceof的判断规则是："),s("strong",[t._v("沿着A的__proto__这条线来找，同时沿着B的prototype这条线来找，如果两条线能找到同一个引用，即同一个对象，那么就返回true。如果找到终点还未重合，则返回false。")])]),t._v(" "),s("p",[t._v("按照以上规则，大家看看“ f1 instanceof Object ”这句代码是不是true？ 根据上图很容易就能看出来，就是true。")]),t._v(" "),s("p",[t._v("通过上以规则，你可以解释很多比较怪异的现象，例如")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/zhangfanhang/frank-notes/raw/master/JS%E7%AC%94%E8%AE%B0/js%E7%9A%84%E4%B8%89%E5%BA%A7%E5%A4%A7%E5%B1%B1/%E5%9B%BE%E7%89%87/instanceof3.png",alt:"instanceof3"}})]),t._v(" "),s("p",[t._v("这些看似很混乱的东西，答案却都是true，这是为何？")]),t._v(" "),s("p",[t._v("正好，这里也接上了咱们上一节说的“乱”。")]),t._v(" "),s("p",[t._v("上一节咱们贴了好多的图片，其实那些图片是可以联合成一个"),s("strong",[t._v("整体")]),t._v("的，即：")]),t._v(" "),s("blockquote",[s("p",[t._v("划重点！！！\n"),s("img",{attrs:{src:"https://gitee.com/zhangfanhang/frank-notes/raw/master/JS%E7%AC%94%E8%AE%B0/js%E7%9A%84%E4%B8%89%E5%BA%A7%E5%A4%A7%E5%B1%B1/%E5%9B%BE%E7%89%87/instanceof4.png",alt:"instanceof4"}})])]),t._v(" "),s("p",[t._v("看这个图片，"),s("strong",[t._v("千万不要嫌烦")]),t._v("，必须一条线一条线挨着分析。如果上一节你看的比较仔细，再结合刚才咱们介绍的instanceof的概念，相信能看懂这个图片的内容。")]),t._v(" "),s("p",[t._v("看看这个图片，你也就知道为何上面三个看似混乱的语句返回的是true了。")]),t._v(" "),s("p",[t._v("问题又出来了。Instanceof这样设计，到底有什么用？到底instanceof想表达什么呢？")]),t._v(" "),s("p",[t._v("重点就这样被这位老朋友给引出来了——继承——原型链。")]),t._v(" "),s("p",[t._v("即，"),s("strong",[t._v("instanceof表示的就是一种继承关系")]),t._v("，或者原型链的结构。请看下节分解。")]),t._v(" "),s("h2",{attrs:{id:"继承"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#继承"}},[t._v("#")]),t._v(" 继承")]),t._v(" "),s("p",[t._v("为何用“继承”为标题，而不用“原型链”？")]),t._v(" "),s("p",[t._v("原型链如果解释清楚了很容易理解，不会与常用的java/C#产生混淆。而“继承”却是常用面向对象语言中最基本的概念，但是java中的继承与javascript中的继承又完全是两回事儿。因此，这里把“继承”着重拿出来，就为了体现这个不同。")]),t._v(" "),s("p",[t._v("javascript中的继承是通过原型链来体现的。先看几句代码")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/zhangfanhang/frank-notes/raw/master/JS%E7%AC%94%E8%AE%B0/js%E7%9A%84%E4%B8%89%E5%BA%A7%E5%A4%A7%E5%B1%B1/%E5%9B%BE%E7%89%87/%E7%BB%A7%E6%89%BF1.png",alt:"继承1"}})]),t._v(" "),s("p",[t._v("以上代码中，f1是Foo函数new出来的对象，f1.a是f1对象的基本属性，f1.b是怎么来的呢？——从Foo.prototype得来，因为f1.__proto__指向的是Foo.prototype")]),t._v(" "),s("p",[s("strong",[t._v("访问一个对象的属性时，先在基本属性中查找，如果没有，再沿着__proto__这条链向上找，这就是原型链。")])]),t._v(" "),s("p",[t._v("看图说话：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/zhangfanhang/frank-notes/raw/master/JS%E7%AC%94%E8%AE%B0/js%E7%9A%84%E4%B8%89%E5%BA%A7%E5%A4%A7%E5%B1%B1/%E5%9B%BE%E7%89%87/%E7%BB%A7%E6%89%BF2.png",alt:"继承2"}})]),t._v(" "),s("p",[t._v("上图中，访问f1.b时，f1的基本属性中没有b，于是沿着__proto__找到了Foo.prototype.b。")]),t._v(" "),s("p",[t._v("那么我们在实际应用中如何区分一个属性到底是基本的还是从原型中找到的呢？大家可能都知道答案了——hasOwnProperty，特别是在for…in…循环中，一定要注意。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/zhangfanhang/frank-notes/raw/master/JS%E7%AC%94%E8%AE%B0/js%E7%9A%84%E4%B8%89%E5%BA%A7%E5%A4%A7%E5%B1%B1/%E5%9B%BE%E7%89%87/%E7%BB%A7%E6%89%BF3.png",alt:"继承3"}})]),t._v(" "),s("p",[t._v("等等，不对！ f1的这个hasOwnProperty方法是从哪里来的？ f1本身没有，Foo.prototype中也没有，哪儿来的？")]),t._v(" "),s("p",[t._v("好问题。")]),t._v(" "),s("p",[t._v("它是从Object.prototype中来的，请看图：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/zhangfanhang/frank-notes/raw/master/JS%E7%AC%94%E8%AE%B0/js%E7%9A%84%E4%B8%89%E5%BA%A7%E5%A4%A7%E5%B1%B1/%E5%9B%BE%E7%89%87/%E7%BB%A7%E6%89%BF4.png",alt:"继承4"}})]),t._v(" "),s("p",[t._v("对象的原型链是沿着__proto__这条线走的，因此在查找f1.hasOwnProperty属性时，就会顺着原型链一直查找到Object.prototype。")]),t._v(" "),s("p",[t._v("由于所有的对象的原型链都会找到Object.prototype，因此所有的对象都会有Object.prototype的方法。这就是所谓的“继承”。")]),t._v(" "),s("p",[t._v("当然这只是一个例子，你可以自定义函数和对象来实现自己的继承。")]),t._v(" "),s("p",[t._v("说一个函数的例子吧。")]),t._v(" "),s("p",[t._v("我们都知道每个函数都有call，apply方法，都有length，arguments，caller等属性。为什么每个函数都有？这肯定是“继承”的。函数由Function函数创建，因此继承的是Function.prototype中的方法。不信可以，我们验证一下：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/zhangfanhang/frank-notes/raw/master/JS%E7%AC%94%E8%AE%B0/js%E7%9A%84%E4%B8%89%E5%BA%A7%E5%A4%A7%E5%B1%B1/%E5%9B%BE%E7%89%87/%E7%BB%A7%E6%89%BF5.png",alt:"继承5"}})]),t._v(" "),s("p",[t._v("看到了吧，有call、length等这些属性。")]),t._v(" "),s("p",[t._v("那怎么还有hasOwnProperty呢？——那是Function.prototype继承自Object.prototype的方法。有疑问可以看看上一节将instanceof时候那个大图，看看"),s("strong",[t._v("Function.prototype.__proto__是否指向Object.prototype。")])]),t._v(" "),s("h2",{attrs:{id:"原型的灵活性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#原型的灵活性"}},[t._v("#")]),t._v(" 原型的灵活性")]),t._v(" "),s("p",[t._v("在Java和C#中，你可以简单的理解class是一个模子，对象就是被这个模子压出来的一批一批月饼（中秋节刚过完）。压个啥样，就得是个啥样，不能随便动，动一动就坏了。")]),t._v(" "),s("p",[t._v("而在javascript中，就没有模子了，月饼被换成了面团，你可以捏成自己想要的样子。")]),t._v(" "),s("p",[t._v("首先，对象属性可以随时改动。")]),t._v(" "),s("p",[t._v("对象或者函数，刚开始new出来之后，可能啥属性都没有。但是你可以这会儿加一个，过一会儿在加两个，非常灵活。")]),t._v(" "),s("p",[t._v("其次，如果继承的方法不合适，可以做出修改。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/zhangfanhang/frank-notes/raw/master/JS%E7%AC%94%E8%AE%B0/js%E7%9A%84%E4%B8%89%E5%BA%A7%E5%A4%A7%E5%B1%B1/%E5%9B%BE%E7%89%87/%E5%8E%9F%E5%9E%8B%E7%9A%84%E7%81%B5%E6%B4%BB%E6%80%A7.png",alt:"原型的灵活性"}})]),t._v(" "),s("p",[t._v("如上图，Object和Array的toString()方法不一样。肯定是Array.prototype.toString()方法做了修改。")]),t._v(" "),s("p",[t._v("同理，我也可以自定义一个函数，并自己去修改prototype.toString()方法。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/zhangfanhang/frank-notes/raw/master/JS%E7%AC%94%E8%AE%B0/js%E7%9A%84%E4%B8%89%E5%BA%A7%E5%A4%A7%E5%B1%B1/%E5%9B%BE%E7%89%87/%E5%8E%9F%E5%9E%8B%E7%9A%84%E7%81%B5%E6%B4%BB%E6%80%A72.png",alt:"原型的灵活性2"}})]),t._v(" "),s("p",[t._v("最后，如果感觉当前缺少你要用的方法，可以自己去创建 =>\n(内置对象添加原型的方法(属性))")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//在字符串中添加一个倒序字符串的方法")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("myReverse")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" str "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"abcd"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("myReverse")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//'dcba'")]),t._v("\n")])])]),s("h2",{attrs:{id:"简述【执行上下文】上"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#简述【执行上下文】上"}},[t._v("#")]),t._v(" 简述【执行上下文】上")]),t._v(" "),s("p",[t._v("什么是“执行上下文”（也叫做“执行上下文环境”）？暂且不下定义，先看一段代码：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/zhangfanhang/frank-notes/raw/master/JS%E7%AC%94%E8%AE%B0/js%E7%9A%84%E4%B8%89%E5%BA%A7%E5%A4%A7%E5%B1%B1/%E5%9B%BE%E7%89%87/%E6%89%A7%E8%A1%8C%E4%B8%8A%E4%B8%8B%E6%96%871.png",alt:"执行上下文1"}})]),t._v(" "),s("p",[t._v("第一句报错，a未定义，很正常。第二句、第三句输出都是undefined，说明浏览器在执行console.log(a)时，已经知道了a是undefined，但却不知道a是10（第三句中）。")]),t._v(" "),s("p",[t._v("在一段js代码拿过来真正一句一句运行之前，浏览器已经做了一些“准备工作”，其中就包括对变量的声明，而不是赋值。变量赋值是在赋值语句执行的时候进行的。可用下图模拟：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/zhangfanhang/frank-notes/raw/master/JS%E7%AC%94%E8%AE%B0/js%E7%9A%84%E4%B8%89%E5%BA%A7%E5%A4%A7%E5%B1%B1/%E5%9B%BE%E7%89%87/%E6%89%A7%E8%A1%8C%E4%B8%8A%E4%B8%8B%E6%96%872.png",alt:"执行上下文2"}})]),t._v(" "),s("p",[t._v("下面还有。先来个简单的。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/zhangfanhang/frank-notes/raw/master/JS%E7%AC%94%E8%AE%B0/js%E7%9A%84%E4%B8%89%E5%BA%A7%E5%A4%A7%E5%B1%B1/%E5%9B%BE%E7%89%87/%E6%89%A7%E8%A1%8C%E4%B8%8A%E4%B8%8B%E6%96%873.png",alt:"执行上下文3"}})]),t._v(" "),s("p",[t._v("有js开发经验的朋友应该都知道，你无论在哪个位置获取")]),t._v(" "),s("blockquote",[s("p",[t._v("当然是在非严格模式下")])]),t._v(" "),s("p",[t._v("this，都是有值的。至于this的取值情况，比较复杂，会专门拿出一篇文章来讲解。")]),t._v(" "),s("p",[t._v("与第一种情况不同的是：第一种情况只是对变量进行声明（并没有赋值），而此种情况直接给this赋值。这也是“准备工作”情况要做的事情之一。")]),t._v(" "),s("p",[t._v("下面还有。。。第三种情况。")]),t._v(" "),s("p",[t._v("在第三种情况中，需要注意代码注释中的两个名词——“函数表达式”和“函数声明”。虽然两者都很常用，但是这两者在“准备工作”时，却是两种待遇。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/zhangfanhang/frank-notes/raw/master/JS%E7%AC%94%E8%AE%B0/js%E7%9A%84%E4%B8%89%E5%BA%A7%E5%A4%A7%E5%B1%B1/%E5%9B%BE%E7%89%87/%E6%89%A7%E8%A1%8C%E4%B8%8A%E4%B8%8B%E6%96%874.png",alt:"执行上下文4"}})]),t._v(" "),s("p",[t._v("看以上代码。“函数声明”时我们看到了第二种情况的影子，而“函数表达式”时我们看到了第一种情况的影子。")]),t._v(" "),s("p",[t._v("没错。在“准备工作”中，对待函数表达式就像对待“ var a = 10 ”这样的变量一样，只是声明。而对待函数声明时，却把函数整个赋值了。")]),t._v(" "),s("p",[t._v("好了，“准备工作”介绍完毕。")]),t._v(" "),s("p",[t._v("我们总结一下，在“准备工作”中完成了哪些工作：")]),t._v(" "),s("ul",[s("li",[t._v("变量、函数表达式——变量声明，默认赋值为undefined；")]),t._v(" "),s("li",[t._v("this——赋值；")]),t._v(" "),s("li",[t._v("函数声明——赋值；")])]),t._v(" "),s("p",[t._v("这三种数据的准备情况我们称之为“执行上下文”或者“执行上下文环境”。")]),t._v(" "),s("blockquote",[s("p",[t._v("这里插一句题外话：通过以上三种情况，你可能会联想到网上的有些考js语法的题目/面试题。的确，几乎每个js语法题中都有这种题目出现。之前你遇到这种题目是不是靠背诵来解决？背过了，隔几天又忘记了。——任何问题，都要去追根溯源，要知道这个问题是真正出自哪一块知识点，要真正去理解。光靠背诵是没用的。")])]),t._v(" "),s("p",[t._v("细心的朋友可能会发现，我们上面所有的例子都是在全局环境下执行的。")]),t._v(" "),s("p",[t._v("其实，javascript在执行一个代码段之前，都会进行这些“准备工作”来生成执行上下文。这个“代码段”其实分三种情况——全局代码，函数体，eval代码。")]),t._v(" "),s("p",[t._v("这里解释一下为什么代码段分为这三种。")]),t._v(" "),s("p",[t._v("所谓“代码段”就是一段文本形式的代码。")]),t._v(" "),s("p",[t._v("首先，全局代码是一种，这个应该没有非议，本来就是手写文本到script标签里面的。")]),t._v(" "),s("p",[t._v("其次，eval代码接收的也是一段文本形式的代码。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/zhangfanhang/frank-notes/raw/master/JS%E7%AC%94%E8%AE%B0/js%E7%9A%84%E4%B8%89%E5%BA%A7%E5%A4%A7%E5%B1%B1/%E5%9B%BE%E7%89%87/%E6%89%A7%E8%A1%8C%E4%B8%8A%E4%B8%8B%E6%96%875.png",alt:"执行上下文5"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/zhangfanhang/frank-notes/raw/master/JS%E7%AC%94%E8%AE%B0/js%E7%9A%84%E4%B8%89%E5%BA%A7%E5%A4%A7%E5%B1%B1/%E5%9B%BE%E7%89%87/%E6%89%A7%E8%A1%8C%E4%B8%8A%E4%B8%8B%E6%96%876.png",alt:"执行上下文6"}})]),t._v(" "),s("p",[t._v("最后，函数体是代码段是因为函数在创建时，本质上是 new Function(…) 得来的，其中需要传入一个文本形式的参数作为函数体。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/zhangfanhang/frank-notes/raw/master/JS%E7%AC%94%E8%AE%B0/js%E7%9A%84%E4%B8%89%E5%BA%A7%E5%A4%A7%E5%B1%B1/%E5%9B%BE%E7%89%87/%E6%89%A7%E8%A1%8C%E4%B8%8A%E4%B8%8B%E6%96%877.png",alt:"执行上下文7"}})]),t._v(" "),s("p",[t._v("这样解释应该能理解了。")]),t._v(" "),s("p",[t._v("最后，"),s("strong",[t._v("eval不常用，也不推荐大家用")]),t._v("。")]),t._v(" "),s("p",[t._v("下一节我们介绍函数的情况，并一起总结一下执行上下文到底包含哪些内容。敬请期待。")]),t._v(" "),s("h2",{attrs:{id:"简述【执行上下文】下"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#简述【执行上下文】下"}},[t._v("#")]),t._v(" 简述【执行上下文】下")]),t._v(" "),s("p",[t._v("上一篇我们讲到在全局环境下的代码段中，执行上下文环境中有如何数据：")]),t._v(" "),s("ul",[s("li",[t._v("变量、函数表达式——变量声明，默认赋值为undefined；")]),t._v(" "),s("li",[t._v("this——赋值；")]),t._v(" "),s("li",[t._v("函数声明——赋值；")])]),t._v(" "),s("p",[t._v("如果在函数中，除了以上数据之外，还会有其他数据。先看以下代码：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/zhangfanhang/frank-notes/raw/master/JS%E7%AC%94%E8%AE%B0/js%E7%9A%84%E4%B8%89%E5%BA%A7%E5%A4%A7%E5%B1%B1/%E5%9B%BE%E7%89%87/%E6%89%A7%E8%A1%8C%E4%B8%8A%E4%B8%8B%E6%96%878.png",alt:"执行上下文8"}})]),t._v(" "),s("p",[t._v("以上代码展示了在函数体的语句执行之前，arguments变量和函数的参数都已经被赋值。从这里可以看出，函数每被调用一次，都会产生一个新的执行上下文环境。因为不同的调用可能就会有不同的参数。")]),t._v(" "),s("p",[t._v("另外一点不同在于，函数在定义的时候（不是调用的时候），就已经确定了函数体内部自由变量的作用域。至于“自由变量”和“作用域”是后面要专门拿出来讲述的重点，这里就先点到为止。用一个例子说明一下：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/zhangfanhang/frank-notes/raw/master/JS%E7%AC%94%E8%AE%B0/js%E7%9A%84%E4%B8%89%E5%BA%A7%E5%A4%A7%E5%B1%B1/%E5%9B%BE%E7%89%87/%E6%89%A7%E8%A1%8C%E4%B8%8A%E4%B8%8B%E6%96%879.png",alt:"执行上下文9"}})]),t._v(" "),s("p",[t._v("全局代码的上下文环境数据内容为：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/zhangfanhang/frank-notes/raw/master/JS%E7%AC%94%E8%AE%B0/js%E7%9A%84%E4%B8%89%E5%BA%A7%E5%A4%A7%E5%B1%B1/%E5%9B%BE%E7%89%87/%E6%89%A7%E8%A1%8C%E4%B8%8A%E4%B8%8B%E6%96%8710.png",alt:"执行上下文10"}})]),t._v(" "),s("p",[t._v("如果代码段是函数体，那么在此基础上需要附加：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/zhangfanhang/frank-notes/raw/master/JS%E7%AC%94%E8%AE%B0/js%E7%9A%84%E4%B8%89%E5%BA%A7%E5%A4%A7%E5%B1%B1/%E5%9B%BE%E7%89%87/%E6%89%A7%E8%A1%8C%E4%B8%8A%E4%B8%8B%E6%96%8711.png",alt:"执行上下文11"}})]),t._v(" "),s("p",[t._v("给执行上下文环境下一个通俗的定义——"),s("strong",[t._v("在执行代码之前，把将要用到的所有的变量都事先拿出来，有的直接赋值了，有的先用undefined占个空。")])]),t._v(" "),s("p",[t._v("了解了执行上下文环境中的数据信息，你就不用再去死记硬背那些可恶的面试题了。理解了就不用背诵！")]),t._v(" "),s("p",[t._v("讲完了上下文环境，又来了新的问题——在执行js代码时，会有数不清的函数调用次数，会产生许多个上下文环境。这么多上下文环境该如何管理，以及如何销毁而释放内存呢？ 通过“执行上下文栈”来解释这个问题。")]),t._v(" "),s("p",[t._v("不过别着急，在解释“执行上下文栈”之前，还需要把this说一下，this还是挺重要的。")]),t._v(" "),s("p",[t._v("说完this，接着说执行上下文栈。")]),t._v(" "),s("h2",{attrs:{id:"this"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#this"}},[t._v("#")]),t._v(" this")]),t._v(" "),s("p",[t._v("接着上一节讲的话，应该轮到“执行上下文栈”了，但是这里不得不插入一节，把this说一下。因为this很重要，js的面试题如果不出几个与this有关的，那出题者都不合格。")]),t._v(" "),s("p",[t._v("其实，this的取值，分四种情况。我们来挨个看一下。")]),t._v(" "),s("p",[t._v("在此再强调一遍一个非常重要的知识点：在函数中this到底取何值，是在函数真正被调用执行的时候确定的，函数定义的时候确定不了。因为this的取值是执行上下文环境的一部分，每次调用函数，都会产生一个新的执行上下文环境。")]),t._v(" "),s("h3",{attrs:{id:"情况1-构造函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#情况1-构造函数"}},[t._v("#")]),t._v(" 情况1：构造函数")]),t._v(" "),s("p",[t._v("所谓构造函数就是用来new对象的函数。其实严格来说，所有的函数都可以new一个对象，但是有些函数的定义是为了new一个对象，而有些函数则不是。另外注意，构造函数的函数名第一个字母大写（规则约定）。例如：Object、Array、Function等。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/zhangfanhang/frank-notes/raw/master/JS%E7%AC%94%E8%AE%B0/js%E7%9A%84%E4%B8%89%E5%BA%A7%E5%A4%A7%E5%B1%B1/%E5%9B%BE%E7%89%87/this1.png",alt:"this1"}})]),t._v(" "),s("p",[t._v("以上代码中，如果函数作为构造函数用，那么其中的this就代表它即将new出来的对象。")]),t._v(" "),s("p",[t._v("注意，以上仅限new Foo()的情况，即Foo函数作为构造函数的情况。如果直接调用Foo函数，而不是new Foo()，情况就大不一样了。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/zhangfanhang/frank-notes/raw/master/JS%E7%AC%94%E8%AE%B0/js%E7%9A%84%E4%B8%89%E5%BA%A7%E5%A4%A7%E5%B1%B1/%E5%9B%BE%E7%89%87/this2.png",alt:"this2"}})]),t._v(" "),s("p",[t._v("这种情况下this是window，我们后文中会说到。")]),t._v(" "),s("h3",{attrs:{id:"情况2-函数作为对象的一个属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#情况2-函数作为对象的一个属性"}},[t._v("#")]),t._v(" 情况2：函数作为对象的一个属性")]),t._v(" "),s("p",[t._v("如果函数作为对象的一个属性时，并且作为对象的一个属性被调用时，函数中的this指向该对象。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/zhangfanhang/frank-notes/raw/master/JS%E7%AC%94%E8%AE%B0/js%E7%9A%84%E4%B8%89%E5%BA%A7%E5%A4%A7%E5%B1%B1/%E5%9B%BE%E7%89%87/this3.png",alt:"this3"}})]),t._v(" "),s("p",[t._v("以上代码中，fn不仅作为一个对象的一个属性，而且的确是作为对象的一个属性被调用。结果this就是obj对象。")]),t._v(" "),s("p",[t._v("注意，如果fn函数不作为obj的一个属性被调用，会是什么结果呢？")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/zhangfanhang/frank-notes/raw/master/JS%E7%AC%94%E8%AE%B0/js%E7%9A%84%E4%B8%89%E5%BA%A7%E5%A4%A7%E5%B1%B1/%E5%9B%BE%E7%89%87/this4.png",alt:"this4"}})]),t._v(" "),s("p",[t._v("如上代码，如果fn函数被赋值到了另一个变量中，并没有作为obj的一个属性被调用，那么this的值就是window，this.x为undefined。")]),t._v(" "),s("h3",{attrs:{id:"情况3-函数用call或者apply调用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#情况3-函数用call或者apply调用"}},[t._v("#")]),t._v(" 情况3：函数用call或者apply调用")]),t._v(" "),s("p",[t._v("当一个函数被call和apply调用时，this的值就取传入的对象的值。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/zhangfanhang/frank-notes/raw/master/JS%E7%AC%94%E8%AE%B0/js%E7%9A%84%E4%B8%89%E5%BA%A7%E5%A4%A7%E5%B1%B1/%E5%9B%BE%E7%89%87/this5.png",alt:"this5"}})]),t._v(" "),s("h3",{attrs:{id:"情况4-全局-调用普通函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#情况4-全局-调用普通函数"}},[t._v("#")]),t._v(" 情况4 全局 & 调用普通函数")]),t._v(" "),s("blockquote",[s("p",[t._v("非严格模式下!")])]),t._v(" "),s("p",[t._v("在全局环境下，this永远是window，这个应该没有非议。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v("window"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n\n")])])]),s("p",[t._v("普通函数在调用时，其中的this也都是window。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/zhangfanhang/frank-notes/raw/master/JS%E7%AC%94%E8%AE%B0/js%E7%9A%84%E4%B8%89%E5%BA%A7%E5%A4%A7%E5%B1%B1/%E5%9B%BE%E7%89%87/this6.png",alt:"this6"}})]),t._v(" "),s("p",[t._v("以上代码很好理解。")]),t._v(" "),s("p",[t._v("不过下面的情况"),s("strong",[t._v("你需要注意一下")]),t._v("：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/zhangfanhang/frank-notes/raw/master/JS%E7%AC%94%E8%AE%B0/js%E7%9A%84%E4%B8%89%E5%BA%A7%E5%A4%A7%E5%B1%B1/%E5%9B%BE%E7%89%87/this7.png",alt:"this7"}})]),t._v(" "),s("p",[t._v("函数f虽然是在obj.fn内部定义的，但是它仍然是一个普通的函数，this仍然指向window。")]),t._v(" "),s("h3",{attrs:{id:"补充"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#补充"}},[t._v("#")]),t._v(" 补充")]),t._v(" "),s("p",[t._v("原文中this的其中一种情况是构造函数的，具体的内容可以参考原文，此处不再赘述。")]),t._v(" "),s("p",[t._v("要补充的内容是，在构造函数的prototype中，this代表着什么。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/zhangfanhang/frank-notes/raw/master/JS%E7%AC%94%E8%AE%B0/js%E7%9A%84%E4%B8%89%E5%BA%A7%E5%A4%A7%E5%B1%B1/%E5%9B%BE%E7%89%87/this8.png",alt:"this8"}})]),t._v(" "),s("p",[t._v("如上代码，在Fn.prototype.getName函数中，this指向的是f1对象。因此可以通过this.name获取f1.name的值。")]),t._v(" "),s("p",[t._v("其实，"),s("strong",[t._v("不仅仅是构造函数的prototype，即便是在整个原型链中，this代表的也都是当前对象的值。")])]),t._v(" "),s("h2",{attrs:{id:"执行上下文栈"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#执行上下文栈"}},[t._v("#")]),t._v(" 执行上下文栈")]),t._v(" "),s("p",[t._v("执行全局代码时，会产生一个执行上下文环境，每次调用函数都又会产生执行上下文环境。当函数调用完成时，这个上下文环境以及其中的数据都会被消除，再重新回到全局上下文环境。处于活动状态的执行上下文环境只有一个。")]),t._v(" "),s("p",[t._v("其实这是一个压栈出栈的过程——执行上下文栈。如下图：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/zhangfanhang/frank-notes/raw/master/JS%E7%AC%94%E8%AE%B0/js%E7%9A%84%E4%B8%89%E5%BA%A7%E5%A4%A7%E5%B1%B1/%E5%9B%BE%E7%89%87/%E6%89%A7%E8%A1%8C%E4%B8%8A%E4%B8%8B%E6%96%87%E6%A0%881.png",alt:"执行上下文栈1"}})]),t._v(" "),s("p",[t._v("可根据以下代码来详细介绍上下文栈的压栈、出栈过程。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/zhangfanhang/frank-notes/raw/master/JS%E7%AC%94%E8%AE%B0/js%E7%9A%84%E4%B8%89%E5%BA%A7%E5%A4%A7%E5%B1%B1/%E5%9B%BE%E7%89%87/%E6%89%A7%E8%A1%8C%E4%B8%8A%E4%B8%8B%E6%96%87%E6%A0%882.png",alt:"执行上下文栈2"}})]),t._v(" "),s("p",[t._v("如上代码。")]),t._v(" "),s("p",[t._v("在执行代码之前，首先将创建全局上下文环境。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/zhangfanhang/frank-notes/raw/master/JS%E7%AC%94%E8%AE%B0/js%E7%9A%84%E4%B8%89%E5%BA%A7%E5%A4%A7%E5%B1%B1/%E5%9B%BE%E7%89%87/%E6%89%A7%E8%A1%8C%E4%B8%8A%E4%B8%8B%E6%96%87%E6%A0%883.png",alt:"执行上下文栈3"}})]),t._v(" "),s("p",[t._v("然后是代码执行。代码执行到第12行之前，上下文环境中的变量都在执行过程中被赋值。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/zhangfanhang/frank-notes/raw/master/JS%E7%AC%94%E8%AE%B0/js%E7%9A%84%E4%B8%89%E5%BA%A7%E5%A4%A7%E5%B1%B1/%E5%9B%BE%E7%89%87/%E6%89%A7%E8%A1%8C%E4%B8%8A%E4%B8%8B%E6%96%87%E6%A0%884.png",alt:"执行上下文栈4"}})]),t._v(" "),s("p",[t._v("执行到第13行，调用bar函数。")]),t._v(" "),s("p",[t._v("跳转到bar函数内部，执行函数体语句之前，会创建一个新的执行上下文环境。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/zhangfanhang/frank-notes/raw/master/JS%E7%AC%94%E8%AE%B0/js%E7%9A%84%E4%B8%89%E5%BA%A7%E5%A4%A7%E5%B1%B1/%E5%9B%BE%E7%89%87/%E6%89%A7%E8%A1%8C%E4%B8%8A%E4%B8%8B%E6%96%87%E6%A0%885.png",alt:"执行上下文栈5"}})]),t._v(" "),s("p",[t._v("并将这个执行上下文环境压栈，设置为活动状态。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/zhangfanhang/frank-notes/raw/master/JS%E7%AC%94%E8%AE%B0/js%E7%9A%84%E4%B8%89%E5%BA%A7%E5%A4%A7%E5%B1%B1/%E5%9B%BE%E7%89%87/%E6%89%A7%E8%A1%8C%E4%B8%8A%E4%B8%8B%E6%96%87%E6%A0%886.png",alt:"执行上下文栈6"}})]),t._v(" "),s("p",[t._v("执行到第5行，又调用了fn函数。进入fn函数，在执行函数体语句之前，会创建fn函数的执行上下文环境，并压栈，设置为活动状态。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/zhangfanhang/frank-notes/raw/master/JS%E7%AC%94%E8%AE%B0/js%E7%9A%84%E4%B8%89%E5%BA%A7%E5%A4%A7%E5%B1%B1/%E5%9B%BE%E7%89%87/%E6%89%A7%E8%A1%8C%E4%B8%8A%E4%B8%8B%E6%96%87%E6%A0%887.png",alt:"执行上下文栈7"}})]),t._v(" "),s("p",[t._v("待第5行执行完毕，即fn函数执行完毕后，此次调用fn所生成的上下文环境出栈，并且被销毁（已经用完了，就要及时销毁，释放内存）。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/zhangfanhang/frank-notes/raw/master/JS%E7%AC%94%E8%AE%B0/js%E7%9A%84%E4%B8%89%E5%BA%A7%E5%A4%A7%E5%B1%B1/%E5%9B%BE%E7%89%87/%E6%89%A7%E8%A1%8C%E4%B8%8A%E4%B8%8B%E6%96%87%E6%A0%888.png",alt:"执行上下文栈8"}})]),t._v(" "),s("p",[t._v("同理，待第13行执行完毕，即bar函数执行完毕后，调用bar函数所生成的上下文环境出栈，并且被销毁（已经用完了，就要及时销毁，释放内存）。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/zhangfanhang/frank-notes/raw/master/JS%E7%AC%94%E8%AE%B0/js%E7%9A%84%E4%B8%89%E5%BA%A7%E5%A4%A7%E5%B1%B1/%E5%9B%BE%E7%89%87/%E6%89%A7%E8%A1%8C%E4%B8%8A%E4%B8%8B%E6%96%87%E6%A0%889.png",alt:"执行上下文栈9"}})]),t._v(" "),s("p",[t._v("好了，我很耐心的给大家介绍了一段简短代码的执行上下文环境的变化过程，一个完整的闭环。其中上下文环境的变量赋值过程我省略了许多，因为那些并不难，一看就知道。")]),t._v(" "),s("p",[t._v("讲到这里，我不得不很遗憾的跟大家说：其实以上我们所演示的是一种比较理想的情况。有一种情况，而且是很常用的一种情况，无法做到这样干净利落的说销毁就销毁。这种情况就是伟大的——"),s("strong",[t._v("闭包")]),t._v("。")]),t._v(" "),s("p",[t._v("要说闭包，咱们还得先从自由变量和作用域说起。")]),t._v(" "),s("h2",{attrs:{id:"简介【作用域】"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#简介【作用域】"}},[t._v("#")]),t._v(" 简介【作用域】")]),t._v(" "),s("blockquote",[s("p",[t._v("特别注意：es6已加入块作用域")])]),t._v(" "),s("p",[t._v("提到作用域，有一句话大家（有js开发经验者）可能比较熟悉：“"),s("strong",[t._v("javascript没有块级作用域")]),t._v("”。所谓“块”，就是大括号“｛｝”中间的语句。例如if语句：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/zhangfanhang/frank-notes/raw/master/JS%E7%AC%94%E8%AE%B0/js%E7%9A%84%E4%B8%89%E5%BA%A7%E5%A4%A7%E5%B1%B1/%E5%9B%BE%E7%89%87/%E4%BD%9C%E7%94%A8%E5%9F%9F1.png",alt:"作用域1"}})]),t._v(" "),s("p",[t._v("再比如for语句：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/zhangfanhang/frank-notes/raw/master/JS%E7%AC%94%E8%AE%B0/js%E7%9A%84%E4%B8%89%E5%BA%A7%E5%A4%A7%E5%B1%B1/%E5%9B%BE%E7%89%87/%E4%BD%9C%E7%94%A8%E5%9F%9F2.png",alt:"作用域2"}})]),t._v(" "),s("p",[t._v("所以，我们在编写代码的时候，不要在“块”里面声明变量，要在代码的一开始就声明好了。以避免发生歧义。如：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/zhangfanhang/frank-notes/raw/master/JS%E7%AC%94%E8%AE%B0/js%E7%9A%84%E4%B8%89%E5%BA%A7%E5%A4%A7%E5%B1%B1/%E5%9B%BE%E7%89%87/%E4%BD%9C%E7%94%A8%E5%9F%9F3.png",alt:"作用域3"}})]),t._v(" "),s("p",[t._v("其实，你光知道“javascript没有块级作用域”是完全不够的，你需要知道的是——"),s("strong",[t._v("javascript除了全局作用域之外，只有函数可以创建的作用域。")])]),t._v(" "),s("blockquote",[s("p",[t._v("当然这句话现在来说也是错误的，es6中加入的let const会创建块级作用域")])]),t._v(" "),s("p",[t._v("所以，我们在声明变量时，全局代码要在代码前端声明，函数中要在函数体一开始就声明好。除了这两个地方，其他地方都不要出现变量声明。而且建议用“单var”形式。")]),t._v(" "),s("p",[t._v("下面继续说作用域。作用域是一个很抽象的概念，类似于一个“地盘”")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/zhangfanhang/frank-notes/raw/master/JS%E7%AC%94%E8%AE%B0/js%E7%9A%84%E4%B8%89%E5%BA%A7%E5%A4%A7%E5%B1%B1/%E5%9B%BE%E7%89%87/%E4%BD%9C%E7%94%A8%E5%9F%9F4.png",alt:"作用域4"}})]),t._v(" "),s("p",[t._v("如上图，全局代码和fn、bar两个函数都会形成一个作用域。而且，作用域有上下级的关系，上下级关系的确定就看函数是在哪个作用域下创建的。例如，fn作用域下创建了bar函数，那么“fn作用域”就是“bar作用域”的上级。")]),t._v(" "),s("p",[t._v("作用域最大的用处就是"),s("strong",[t._v("隔离变量")]),t._v("，不同作用域下同名变量不会有冲突。例如以上代码中，三个作用域下都声明了“a”这个变量，但是他们不会有冲突。各自的作用域下，用各自的“a”。")]),t._v(" "),s("h2",{attrs:{id:"【作用域】和【上下文环境】"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#【作用域】和【上下文环境】"}},[t._v("#")]),t._v(" 【作用域】和【上下文环境】")]),t._v(" "),s("p",[t._v("上文简单介绍了作用域，本文把作用域和上下文环境结合起来说一下，会理解的更深一些。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/zhangfanhang/frank-notes/raw/master/JS%E7%AC%94%E8%AE%B0/js%E7%9A%84%E4%B8%89%E5%BA%A7%E5%A4%A7%E5%B1%B1/%E5%9B%BE%E7%89%87/%E3%80%90%E4%BD%9C%E7%94%A8%E5%9F%9F%E3%80%91%E5%92%8C%E3%80%90%E4%B8%8A%E4%B8%8B%E6%96%87%E7%8E%AF%E5%A2%83%E3%80%911.png",alt:"【作用域】和【上下文环境】1"}})]),t._v(" "),s("p",[t._v("如上图，我们在上文中已经介绍了，除了全局作用域之外，每个函数都会创建自己的作用域，"),s("strong",[t._v("作用域在函数定义时就已经确定了。而不是在函数调用时确定。")])]),t._v(" "),s("p",[t._v("第一步，在加载程序时，已经确定了全局上下文环境，并随着程序的执行而对变量就行赋值。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/zhangfanhang/frank-notes/raw/master/JS%E7%AC%94%E8%AE%B0/js%E7%9A%84%E4%B8%89%E5%BA%A7%E5%A4%A7%E5%B1%B1/%E5%9B%BE%E7%89%87/%E3%80%90%E4%BD%9C%E7%94%A8%E5%9F%9F%E3%80%91%E5%92%8C%E3%80%90%E4%B8%8A%E4%B8%8B%E6%96%87%E7%8E%AF%E5%A2%83%E3%80%912.png",alt:"【作用域】和【上下文环境】2"}})]),t._v(" "),s("p",[t._v("第二步，程序执行到第27行，调用fn(10)，此时生成此次调用fn函数时的上下文环境，压栈，并将此上下文环境设置为活动状态。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/zhangfanhang/frank-notes/raw/master/JS%E7%AC%94%E8%AE%B0/js%E7%9A%84%E4%B8%89%E5%BA%A7%E5%A4%A7%E5%B1%B1/%E5%9B%BE%E7%89%87/%E3%80%90%E4%BD%9C%E7%94%A8%E5%9F%9F%E3%80%91%E5%92%8C%E3%80%90%E4%B8%8A%E4%B8%8B%E6%96%87%E7%8E%AF%E5%A2%83%E3%80%913.png",alt:"【作用域】和【上下文环境】3"}})]),t._v(" "),s("p",[t._v("第三步，执行到第23行时，调用bar(100)，生成此次调用的上下文环境，压栈，并设置为活动状态。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/zhangfanhang/frank-notes/raw/master/JS%E7%AC%94%E8%AE%B0/js%E7%9A%84%E4%B8%89%E5%BA%A7%E5%A4%A7%E5%B1%B1/%E5%9B%BE%E7%89%87/%E3%80%90%E4%BD%9C%E7%94%A8%E5%9F%9F%E3%80%91%E5%92%8C%E3%80%90%E4%B8%8A%E4%B8%8B%E6%96%87%E7%8E%AF%E5%A2%83%E3%80%914.png",alt:"【作用域】和【上下文环境】4"}})]),t._v(" "),s("p",[t._v("第四步，执行完第23行，bar(100)调用完成。则bar(100)上下文环境被销毁。接着执行第24行，调用bar(200)，则又生成bar(200)的上下文环境，压栈，设置为活动状态。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/zhangfanhang/frank-notes/raw/master/JS%E7%AC%94%E8%AE%B0/js%E7%9A%84%E4%B8%89%E5%BA%A7%E5%A4%A7%E5%B1%B1/%E5%9B%BE%E7%89%87/%E3%80%90%E4%BD%9C%E7%94%A8%E5%9F%9F%E3%80%91%E5%92%8C%E3%80%90%E4%B8%8A%E4%B8%8B%E6%96%87%E7%8E%AF%E5%A2%83%E3%80%915.png",alt:"【作用域】和【上下文环境】5"}})]),t._v(" "),s("p",[t._v("第五步，执行完第24行，则bar(200)调用结束，其上下文环境被销毁。此时会回到fn(10)上下文环境，变为活动状态。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/zhangfanhang/frank-notes/raw/master/JS%E7%AC%94%E8%AE%B0/js%E7%9A%84%E4%B8%89%E5%BA%A7%E5%A4%A7%E5%B1%B1/%E5%9B%BE%E7%89%87/%E3%80%90%E4%BD%9C%E7%94%A8%E5%9F%9F%E3%80%91%E5%92%8C%E3%80%90%E4%B8%8A%E4%B8%8B%E6%96%87%E7%8E%AF%E5%A2%83%E3%80%916.png",alt:"【作用域】和【上下文环境】6"}})]),t._v(" "),s("p",[t._v("第六步，执行完第27行代码，fn(10)执行完成之后，fn(10)上下文环境被销毁，全局上下文环境又回到活动状态。\n"),s("img",{attrs:{src:"https://gitee.com/zhangfanhang/frank-notes/raw/master/JS%E7%AC%94%E8%AE%B0/js%E7%9A%84%E4%B8%89%E5%BA%A7%E5%A4%A7%E5%B1%B1/%E5%9B%BE%E7%89%87/%E3%80%90%E4%BD%9C%E7%94%A8%E5%9F%9F%E3%80%91%E5%92%8C%E3%80%90%E4%B8%8A%E4%B8%8B%E6%96%87%E7%8E%AF%E5%A2%83%E3%80%917.png",alt:"【作用域】和【上下文环境】7"}})]),t._v(" "),s("p",[t._v("最后我们可以把以上这几个图片连接起来看看。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/zhangfanhang/frank-notes/raw/master/JS%E7%AC%94%E8%AE%B0/js%E7%9A%84%E4%B8%89%E5%BA%A7%E5%A4%A7%E5%B1%B1/%E5%9B%BE%E7%89%87/%E3%80%90%E4%BD%9C%E7%94%A8%E5%9F%9F%E3%80%91%E5%92%8C%E3%80%90%E4%B8%8A%E4%B8%8B%E6%96%87%E7%8E%AF%E5%A2%83%E3%80%918.png",alt:"【作用域】和【上下文环境】8"}})]),t._v(" "),s("p",[t._v("连接起来看，还是挺有意思的。"),s("strong",[t._v("作用域只是一个“地盘”，一个抽象的概念，其中没有变量。要通过作用域对应的执行上下文环境来获取变量的值。同一个作用域下，不同的调用会产生不同的执行上下文环境，继而产生不同的变量的值。所以，作用域中变量的值是在执行过程中产生的确定的，而作用域却是在函数创建时就确定了。")])]),t._v(" "),s("p",[t._v("所以，如果要查找一个作用域下某个变量的值，就需要找到这个作用域对应的执行上下文环境，再在其中寻找变量的值。")]),t._v(" "),s("p",[t._v("虽然本文很长，但是文字较少，图片居多，图片都有形象的展示，大家花十几分钟也能慢慢看完。但是，这节内容真的很重要。")]),t._v(" "),s("p",[t._v("以上代码中，咱们还没有设计到跨作用域取值的情况，即——自由变量。详细内容且听下回分解。")]),t._v(" "),s("h2",{attrs:{id:"从【自由变量】到【作用域链】"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#从【自由变量】到【作用域链】"}},[t._v("#")]),t._v(" 从【自由变量】到【作用域链】")]),t._v(" "),s("p",[t._v("先解释一下什么是“自由变量”。")]),t._v(" "),s("p",[t._v("在A作用域中使用的变量x，却没有在A作用域中声明（即在其他作用域中声明的），对于A作用域来说，x就是一个自由变量。如下图")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/zhangfanhang/frank-notes/raw/master/JS%E7%AC%94%E8%AE%B0/js%E7%9A%84%E4%B8%89%E5%BA%A7%E5%A4%A7%E5%B1%B1/%E5%9B%BE%E7%89%87/%E4%BB%8E%E3%80%90%E8%87%AA%E7%94%B1%E5%8F%98%E9%87%8F%E3%80%91%E5%88%B0%E3%80%90%E4%BD%9C%E7%94%A8%E5%9F%9F%E9%93%BE%E3%80%911.png",alt:"从【自由变量】到【作用域链】1"}})]),t._v(" "),s("p",[t._v("如上程序中，在调用fn()函数时，函数体中第6行。取b的值就直接可以在fn作用域中取，因为b就是在这里定义的。而取x的值时，就需要到另一个作用域中取。到哪个作用域中取呢？")]),t._v(" "),s("p",[t._v("有人说过"),s("strong",[t._v("要到父作用域中取，其实有时候这种解释会产生歧义")]),t._v("。例如：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/zhangfanhang/frank-notes/raw/master/JS%E7%AC%94%E8%AE%B0/js%E7%9A%84%E4%B8%89%E5%BA%A7%E5%A4%A7%E5%B1%B1/%E5%9B%BE%E7%89%87/%E4%BB%8E%E3%80%90%E8%87%AA%E7%94%B1%E5%8F%98%E9%87%8F%E3%80%91%E5%88%B0%E3%80%90%E4%BD%9C%E7%94%A8%E5%9F%9F%E9%93%BE%E3%80%912.png",alt:"从【自由变量】到【作用域链】2"}})]),t._v(" "),s("p",[t._v("所以，不要在用以上说法了。相比而言，用这句话描述会更加贴切——"),s("strong",[t._v("要到创建这个函数的那个作用域中取值")]),t._v("——是“创建”，而不是“调用”，切记切记——其实这就是"),s("strong",[t._v("所谓的“静态作用域”。")])]),t._v(" "),s("p",[t._v("对于本文第一段代码，在fn函数中，取自由变量x的值时，要到哪个作用域中取？——要到创建fn函数的那个作用域中取——无论fn函数将在哪里调用。")]),t._v(" "),s("p",[t._v("上面描述的只是跨一步作用域去寻找。")]),t._v(" "),s("p",[t._v("如果跨了一步，还没找到呢？——接着跨！——一直跨到全局作用域为止。要是在全局作用域中都没有找到，那就是真的没有了。")]),t._v(" "),s("p",[t._v("这个一步一步“跨”的路线，我们称之为——作用域链。")]),t._v(" "),s("p",[t._v("我们拿文字总结一下取自由变量时的这个“作用域链”过程：（假设a是自由变量）")]),t._v(" "),s("p",[t._v("第一步，现在当前作用域查找a，如果有则获取并结束。如果没有则继续；")]),t._v(" "),s("p",[t._v("第二步，如果当前作用域是全局作用域，则证明a未定义，结束；否则继续；")]),t._v(" "),s("p",[t._v("第三步，（不是全局作用域，那就是函数作用域）将创建该函数的作用域作为当前作用域；")]),t._v(" "),s("p",[t._v("第四步，跳转到第一步。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/zhangfanhang/frank-notes/raw/master/JS%E7%AC%94%E8%AE%B0/js%E7%9A%84%E4%B8%89%E5%BA%A7%E5%A4%A7%E5%B1%B1/%E5%9B%BE%E7%89%87/%E4%BB%8E%E3%80%90%E8%87%AA%E7%94%B1%E5%8F%98%E9%87%8F%E3%80%91%E5%88%B0%E3%80%90%E4%BD%9C%E7%94%A8%E5%9F%9F%E9%93%BE%E3%80%913.png",alt:"从【自由变量】到【作用域链】3"}})]),t._v(" "),s("p",[t._v("以上代码中：第13行，fn()返回的是bar函数，赋值给x。执行x()，即执行bar函数代码。取b的值时，直接在fn作用域取出。取a的值时，试图在fn作用域取，但是取不到，只能转向创建fn的那个作用域中去查找，结果找到了。")]),t._v(" "),s("p",[t._v("这一节看似很轻松的把作用域链引出来，并讲完了。之所有轻松是有前几节的基础，否则将很难解释。")]),t._v(" "),s("p",[t._v("接下来咱们开始正式说说一直期待依旧的朋友——闭包。敬请期待下一节。")]),t._v(" "),s("h2",{attrs:{id:"闭包"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#闭包"}},[t._v("#")]),t._v(" 闭包")]),t._v(" "),s("p",[t._v("前面提到的上下文环境和作用域的知识，除了了解这些知识之外，还是理解闭包的基础。")]),t._v(" "),s("p",[t._v("至于“闭包”这个词的概念的文字描述，确实不好解释，我看过很多遍，但是现在还是记不住。")]),t._v(" "),s("p",[t._v("但是你只需要知道应用的两种情况即可——"),s("strong",[t._v("函数作为返回值")]),t._v("，"),s("strong",[t._v("函数作为参数传递")]),t._v("。")]),t._v(" "),s("h3",{attrs:{id:"第一-函数作为返回值"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第一-函数作为返回值"}},[t._v("#")]),t._v(" 第一，函数作为返回值")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/zhangfanhang/frank-notes/raw/master/JS%E7%AC%94%E8%AE%B0/js%E7%9A%84%E4%B8%89%E5%BA%A7%E5%A4%A7%E5%B1%B1/%E5%9B%BE%E7%89%87/%E9%97%AD%E5%8C%851.png",alt:"闭包1"}}),t._v("\n如上代码，bar函数作为返回值，赋值给f1变量。执行f1(15)时，用到了fn作用域下的max变量的值。至于如何跨作用域取值，可以参考上一节。")]),t._v(" "),s("h3",{attrs:{id:"第二-函数作为参数被传递"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第二-函数作为参数被传递"}},[t._v("#")]),t._v(" 第二，函数作为参数被传递")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/zhangfanhang/frank-notes/raw/master/JS%E7%AC%94%E8%AE%B0/js%E7%9A%84%E4%B8%89%E5%BA%A7%E5%A4%A7%E5%B1%B1/%E5%9B%BE%E7%89%87/%E9%97%AD%E5%8C%852.png",alt:"闭包2"}})]),t._v(" "),s("p",[t._v("如上代码中，fn函数作为一个参数被传递进入另一个函数，赋值给f参数。执行f(15)时，max变量的取值是10，而不是100。")]),t._v(" "),s("p",[t._v("上一节讲到自由变量跨作用域取值时，曾经强调过：要去创建这个函数的作用域取值，而不是“父作用域”。理解了这一点，以上两端代码中，自由变量如何取值应该比较简单。（不明白的朋友一定要去上一节看看，这个很重要！）")]),t._v(" "),s("p",[t._v("另外，讲到闭包，除了结合着作用域之外，还需要结合着执行上下文栈来说一下。")]),t._v(" "),s("p",[t._v("在前面讲执行上下文栈时，我们提到当一个函数被调用完成之后，其执行上下文环境将被销毁，其中的变量也会被同时销毁。")]),t._v(" "),s("p",[t._v("但是在当时那篇文章中留了一个问号——有些情况下，函数调用完成之后，其执行上下文环境不会接着被销毁。这就是需要理解闭包的核心内容。")]),t._v(" "),s("p",[t._v("咱们可以拿本文的第一段代码（稍作修改）来分析一下。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/zhangfanhang/frank-notes/raw/master/JS%E7%AC%94%E8%AE%B0/js%E7%9A%84%E4%B8%89%E5%BA%A7%E5%A4%A7%E5%B1%B1/%E5%9B%BE%E7%89%87/%E9%97%AD%E5%8C%851.png",alt:"闭包3"}})]),t._v(" "),s("p",[t._v("第一步，代码执行前生成全局上下文环境，并在执行时对其中的变量进行赋值。此时全局上下文环境是活动状态。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/zhangfanhang/frank-notes/raw/master/JS%E7%AC%94%E8%AE%B0/js%E7%9A%84%E4%B8%89%E5%BA%A7%E5%A4%A7%E5%B1%B1/%E5%9B%BE%E7%89%87/%E9%97%AD%E5%8C%854.png",alt:"闭包4"}})]),t._v(" "),s("p",[t._v("第二步，执行第17行代码时，调用fn()，产生fn()执行上下文环境，压栈，并设置为活动状态。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/zhangfanhang/frank-notes/raw/master/JS%E7%AC%94%E8%AE%B0/js%E7%9A%84%E4%B8%89%E5%BA%A7%E5%A4%A7%E5%B1%B1/%E5%9B%BE%E7%89%87/%E9%97%AD%E5%8C%855.png",alt:"闭包5"}})]),t._v(" "),s("p",[t._v("第三步，执行完第17行，fn()调用完成。按理说应该销毁掉fn()的执行上下文环境，但是这里不能这么做。注意，"),s("strong",[t._v("重点来了")]),t._v("：因为执行fn()时，返回的是一个函数。函数的特别之处在于可以创建一个独立的作用域。而正巧合的是，返回的这个函数体中，还有一个自由变量max要引用fn作用域下的fn()上下文环境中的max。因此，这个max不能被销毁，销毁了之后bar函数中的max就找不到值了。")]),t._v(" "),s("p",[t._v("因此，这里的fn()上下文环境不能被销毁，还依然存在与执行上下文栈中。")]),t._v(" "),s("p",[t._v("——即，执行到第18行时，全局上下文环境将变为活动状态，但是fn()上下文环境依然会在执行上下文栈中。另外，执行完第18行，全局上下文环境中的max被赋值为100。如下图：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/zhangfanhang/frank-notes/raw/master/JS%E7%AC%94%E8%AE%B0/js%E7%9A%84%E4%B8%89%E5%BA%A7%E5%A4%A7%E5%B1%B1/%E5%9B%BE%E7%89%87/%E9%97%AD%E5%8C%856.png",alt:"闭包6"}})]),t._v(" "),s("p",[t._v("第四步，执行到第20行，执行f1(15)，即执行bar(15)，创建bar(15)上下文环境，并将其设置为活动状态。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/zhangfanhang/frank-notes/raw/master/JS%E7%AC%94%E8%AE%B0/js%E7%9A%84%E4%B8%89%E5%BA%A7%E5%A4%A7%E5%B1%B1/%E5%9B%BE%E7%89%87/%E9%97%AD%E5%8C%857.png",alt:"闭包7"}})]),t._v(" "),s("p",[t._v("执行bar(15)时，max是自由变量，需要向创建bar函数的作用域中查找，找到了max的值为10。这个过程在作用域链一节已经讲过。")]),t._v(" "),s("p",[t._v("这里的重点就在于，创建bar函数是在执行fn()时创建的。fn()早就执行结束了，但是fn()执行上下文环境还存在与栈中，因此bar(15)时，max可以查找到。如果fn()上下文环境销毁了，那么max就找不到了。")]),t._v(" "),s("p",[s("strong",[t._v("使用闭包会增加内容开销")]),t._v("，现在很明显了吧！")]),t._v(" "),s("p",[t._v("第五步，执行完20行就是上下文环境的销毁过程，这里就不再赘述了。")]),t._v(" "),s("p",[s("strong",[t._v("闭包和作用域、上下文环境有着密不可分的关系")]),t._v("，真的是“想说爱你不容易”！")]),t._v(" "),s("p",[s("strong",[t._v("无论你是想了解一个经典的框架/类库，还是想自己开发一个插件或者类库，像闭包、原型这些基本的理论，是一定要知道的。否则，到时候出了BUG你都不知道为什么，因为这些BUG可能完全在你的知识范围之外。")])]),t._v(" "),s("h2",{attrs:{id:"补充-上下文环境和作用域的关系"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#补充-上下文环境和作用域的关系"}},[t._v("#")]),t._v(" 补充：上下文环境和作用域的关系")]),t._v(" "),s("p",[t._v("本系列用了大量的篇幅讲解了上下文环境和作用域，有些人反映这两个是一回儿事。本文就用一个小例子来说明一下，作用域和上下文环境绝对不是一回事儿。")]),t._v(" "),s("p",[t._v("再说明之前，咱们先用简单的语言来概括一下这两个的区别。")]),t._v(" "),s("ol",[s("li",[t._v("上下文环境：")])]),t._v(" "),s("p",[t._v("可以理解为一个看不见摸不着的"),s("strong",[t._v("对象")]),t._v("（有若干个属性），虽然看不见摸不着，但确实实实在在存在的，因为所有的变量都在里面存储着，要不然咱们定义的变量在哪里存？")]),t._v(" "),s("p",[t._v("另外，对于函数来说，上下文环境是在调用时创建的，这个很好理解。拿参数做例子，你不调用函数，我哪儿知道你要给我传什么参数？")]),t._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[t._v("作用域：")])]),t._v(" "),s("blockquote",[s("p",[t._v("这句话现在看来是错误的")])]),t._v(" "),s("p",[t._v("首先，它很抽象。第二，记住一句话："),s("strong",[t._v("除了全局作用域，只有函数才能创建作用域")]),t._v("。创建一个函数就创建了一个作用域，无论你调用不调用，函数只要创建了，它就有独立的作用域，就有自己的一个“地盘”。")]),t._v(" "),s("ol",{attrs:{start:"3"}},[s("li",[t._v("两者：")])]),t._v(" "),s("p",[t._v("一个作用域下可能包含若干个上下文环境。有可能从来没有过上下文环境（函数从来就没有被调用过）；有可能有过，现在函数被调用完毕后，上下文环境被销毁了；有可能同时存在一个或多个（闭包）。")]),t._v(" "),s("p",[t._v("上面的文字不理解没关系，且看下面的例子。")]),t._v(" "),s("p",[t._v("第一，除了全局作用域外，每个函数都要创建一个作用域。作用域之间的变量是相互独立的。因此，全局作用域中的x和fn作用域中的x，两者毫无关系，互不影响，和平相处。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/zhangfanhang/frank-notes/raw/master/JS%E7%AC%94%E8%AE%B0/js%E7%9A%84%E4%B8%89%E5%BA%A7%E5%A4%A7%E5%B1%B1/%E5%9B%BE%E7%89%87/%E4%B8%8A%E4%B8%8B%E6%96%87%E7%8E%AF%E5%A2%83%E5%92%8C%E4%BD%9C%E7%94%A8%E5%9F%9F%E7%9A%84%E5%85%B3%E7%B3%BB.png",alt:"上下文环境和作用域的关系"}})]),t._v(" "),s("p",[t._v("第二，程序执行之前，会生成全局上下文环境，并在程序执行时，对其中的变量赋值。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/zhangfanhang/frank-notes/raw/master/JS%E7%AC%94%E8%AE%B0/js%E7%9A%84%E4%B8%89%E5%BA%A7%E5%A4%A7%E5%B1%B1/%E5%9B%BE%E7%89%87/%E4%B8%8A%E4%B8%8B%E6%96%87%E7%8E%AF%E5%A2%83%E5%92%8C%E4%BD%9C%E7%94%A8%E5%9F%9F%E7%9A%84%E5%85%B3%E7%B3%BB2.png",alt:"上下文环境和作用域的关系2"}})]),t._v(" "),s("p",[t._v("第三，程序执行到第17行，调用fn(5)，会产生fn(5)的上下文环境，并压栈，并设置为活动状态。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/zhangfanhang/frank-notes/raw/master/JS%E7%AC%94%E8%AE%B0/js%E7%9A%84%E4%B8%89%E5%BA%A7%E5%A4%A7%E5%B1%B1/%E5%9B%BE%E7%89%87/%E4%B8%8A%E4%B8%8B%E6%96%87%E7%8E%AF%E5%A2%83%E5%92%8C%E4%BD%9C%E7%94%A8%E5%9F%9F%E7%9A%84%E5%85%B3%E7%B3%BB3.png",alt:"上下文环境和作用域的关系3"}})]),t._v(" "),s("p",[t._v("第四，执行完第17行，fn(5)的返回值赋值给了f1。此时执行上下文环境又重新回到全局，但是fn(5)的上下文环境不能就此销毁，因为其中有闭包的引用（可翻看前面文章，此处不再赘述）。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/zhangfanhang/frank-notes/raw/master/JS%E7%AC%94%E8%AE%B0/js%E7%9A%84%E4%B8%89%E5%BA%A7%E5%A4%A7%E5%B1%B1/%E5%9B%BE%E7%89%87/%E4%B8%8A%E4%B8%8B%E6%96%87%E7%8E%AF%E5%A2%83%E5%92%8C%E4%BD%9C%E7%94%A8%E5%9F%9F%E7%9A%84%E5%85%B3%E7%B3%BB4.png",alt:"上下文环境和作用域的关系4"}})])])}),[],!1,null,null,null);a.default=r.exports}}]);